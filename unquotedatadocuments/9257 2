class /

  def self.deal_export
    logger = Logger.new("#{Rails.root}/log/export_log_check.log")
    logger.info "------Deal Export Start#{Time.zone.now}----------------"
    Deal.transaction do
      DealExportData.delete_all
      Deal.by_site_status.find_each(batch_size:100) do |ab|
        begin
          DealExportData.create(deal_id: ab.id,company_name: ab.company_name, country_name: ab.country_name, city_name: ab.city_name_export, industry_name: ab.industry_name, super_sector_name: ab.super_sector_name, deal_value: ab.deal_value_export, deal_announced_date: ab.deal_announced_format_export, value_confidential: ab.value_confidential, value_estimate: ab.value_estimate, advanced_deal_type: ab.advanced_deal_type_export, deal_type: ab.deal_type_name, basic_sector: ab.basic_sector_name, sector_name: ab.sector_name, company_information_text: ab.company_information_text_export, vendor_type_name: ab.vendor_type_name_export, deal_vendor_name: ab.deal_vendor_name_export, equity_syndicate: ab.equity_syndicate_export, mezzanine_syndicate: ab.mezzanine_syndicate_export, debt_syndicate: ab.debt_syndicate_export, funding_round: ab.funding_round_export, majority_minority_stake: ab.majority_minority_stake_export, legal_advisers: ab.legal_advisers_export, corporate_finance_advisers: ab.corporate_finance_advisers_export, introduced_to_investor: ab.introduced_to_investor_export, accounting_advisers: ab.accounting_advisers_export, other_advisers: ab.other_advisers_export, company_founded: ab.company_founded_export, region_name: ab.region_name_export, staff_count: ab.staff_count_export, ebit: ab.ebit_export, ebit_forecast_str: ab.ebit_forecast_str, ebit_year: ab.ebit_year_export, ebit_confidential_str: ab.ebit_confidential_str, ebitda: ab.ebitda_export, ebitda_year: ab.ebitda_year_export, ebitda_forecast_str: ab.ebitda_forecast_str, ebitda_confidential_str: ab.ebitda_confidential_str, turnover: ab.turnover_export, turnover_year: ab.turnover_year_export, turnover_forecast_str: ab.turnover_forecast_str, turnover_confidential_str: ab.turnover_confidential_str, advisor_name: ab.advisor_name_export, exit_id: ab.exit_id_exp, exit_value: ab.exit_value_export, exit_route_name: ab.exit_route_name_export, exit_date: ab.exit_date_format_export, exit_market: ab.exit_market_export, exit_acquirer: ab.exit_acquirer_export, total_debt_amount: ab.total_debt_amount_export, equity: ab.return_empty_string, fund_invested: ab.fund_invested_export, custom_currency_value_of_equity: ab.custom_currency_value_of_equity_export, custom_total_mezzanine_amount: ab.custom_total_mezzanine_amount_export, exit_status: ab.exit_status_export, equity_all: ab.equity_all_export, equity_lead: ab.equity_lead_export, commercial_due_diligence_advisers: ab.commercial_due_diligence_advisers_export, environmental_due_diligence_advisers: ab.environmental_due_diligence_advisers_export, financial_due_diligence_advisers: ab.financial_due_diligence_advisers_export, insurance_due_diligence_advisers: ab.insurance_due_diligence_advisers_export, other_due_diligence_advisers: ab.other_due_diligence_advisers_export, actuarial_advisor: ab.actuarial_advisor_export, sponsor_broker_advisor: ab.sponsor_broker_advisor_export, tax_advisers: ab.tax_advisers_export, exit_investors_true: ab.exit_investors_true_export, exit_investors_false: ab.exit_investors_false_export, deal_value_yen_f: ab.deal_value_yen_export, deal_value_euro_f:ab.deal_value_euro_export, deal_value_us_f:ab.deal_value_us_export, deal_value_uk_f:ab.deal_value_uk_export, deal_value_uk_est: ab.deal_value_uk_est, deal_value_us_est: ab.deal_value_us_est, deal_value_euro_est: ab.deal_value_euro_est, deal_value_yen_est: ab.deal_value_yen_est , :exit_value_euro_f => ab.exit_value_euro, :exit_value_yen_f => ab.exit_value_yen, :exit_value_uk_f => ab.exit_value_uk, :exit_value_us_f => ab.exit_value_us, :exit_value_check_est_us => ab.exit_value_check_est_us,:exit_value_check_est_uk => ab.exit_value_check_est_uk, :exit_value_check_est_yen => ab.exit_value_check_est_yen,:exit_value_check_est_euro => ab.exit_value_check_est_euro,:deal_announced => ab.deal_announced,:deal_value_euro => ab.deal_value_euro_f,:deal_value_yen => ab.deal_value_yen_f,:deal_value_us => ab.deal_value_us_f,:deal_value_uk => ab.deal_value_uk_f, :total_debt_amount_us => ab.total_debt_amount_us_export, :total_debt_amount_uk => ab.total_debt_amount_uk_export, :total_debt_amount_yen => ab.total_debt_amount_yen_export, :total_debt_amount_euro => ab.total_debt_amount_euro_export, :ebit_uk => ab.ebit_uk_export, :ebit_uk_conf => ab.ebit_uk_conf_export, :ebit_us => ab.ebit_us_export, :ebit_us_conf => ab.ebit_us_conf_export, :ebit_yen => ab.ebit_yen_export, :ebit_yen_conf => ab.ebit_yen_conf_export, :ebit_euro => ab.ebit_euro_export, :ebit_euro_conf => ab.ebit_euro_conf_export, :ebitda_uk => ab.ebitda_uk_export, :ebitda_uk_conf => ab.ebitda_uk_conf_export, :ebitda_us => ab.ebitda_us_export, :ebitda_us_conf => ab.ebitda_us_conf_export, :ebitda_yen => ab.ebitda_yen_export, :ebitda_yen_conf => ab.ebitda_yen_conf_export, :ebitda_euro => ab.ebitda_euro_export, :ebitda_euro_conf => ab.ebitda_euro_conf_export, :turnover_uk => ab.turnover_uk_export, :turnover_uk_conf => ab.turnover_uk_conf_export, :turnover_us => ab.turnover_us_export, :turnover_us_conf => ab.turnover_us_conf_export, :turnover_yen => ab.turnover_yen_export, :turnover_yen_conf => ab.turnover_yen_conf_export,:turnover_euro => ab.turnover_euro_export, :turnover_euro_conf => ab.turnover_euro_conf_export )
        rescue Exception => e
          puts  "Error : Unable to save data for because #{e.message}"
          puts  "Error : Unable to save data for #{ab.id}"
        end
      end
    end
    logger.info "------Deal Export End#{Time.zone.now}----------------"
  end

  def self.fund_export
    logger = Logger.new("#{Rails.root}/log/export_log_check.log")
    logger.info "------Fund Export Start#{Time.zone.now}----------------"
    Fund.transaction do
      FundExportData.delete_all
      Fund.by_site_status.find_each(batch_size:100) do |bc|
        begin
          FundExportData.create(fund_id:bc.id,name:bc.name,investor_name:bc.investor_name_export,country_name:bc.country_name_export,fund_type_name:bc.fund_type_name_export,vintage:bc.vintage_export,target_size:bc.target_size_export,fund_event_announced:bc.fund_event_announced_format_export,amount_raised_fund_announced:bc.amount_raised_fund_announced,fund_event_interim_date1:bc.fund_event_interim_date1_format_export,raised_at_interim_date1:bc.raised_at_interim_date1,fund_event_interim_date2:bc.fund_event_interim_date2_format_export,raised_at_interim_date2:bc.raised_at_interim_date2,fund_event_interim_date3:bc.fund_event_interim_date3_format_export,raised_at_interim_date3:bc.raised_at_interim_date3,raised_at_interim_date3:bc.raised_at_interim_date3,fund_event_final_close:bc.fund_event_final_close_format_export,amount_raised_at_final_close:bc.amount_raised_at_final_close,fund_event_first_close:bc.fund_event_first_close_format_export,amount_raised_at_first_close:bc.amount_raised_at_first_close,status_name:bc.status_name_export,fund_geo_pref:bc.fund_geo_pref_export,fund_stage_pref_str:bc.fund_stage_pref_str_export,fund_sector_pref_str:bc.fund_sector_pref_str_export,investment_range_min_max:bc.investment_range_min_max_export,investment_deal_size_min_max:bc.investment_deal_size_min_max_export,co_invest:bc.co_invest_export,fund_status:bc.fund_status_export,fund_structure_life_extension:bc.fund_structure_life_extension_export,lps_in_fund:bc.lps_in_fund_export,fund_advisor_name:bc.fund_advisor_name_export, fund_target_size_uk: bc.fund_target_size_uk, fund_target_size_us: bc.fund_target_size_us, fund_target_size_euro: bc.fund_target_size_euro, fund_target_size_yen:bc.fund_target_size_yen,fund_target_size_uk_f: bc.fund_target_size_uk, fund_target_size_us_f: bc.fund_target_size_us, fund_target_size_euro_f: bc.fund_target_size_euro, fund_target_size_yen_f:bc.fund_target_size_yen, :amount_raised_announced_us => bc.amount_raised_fund_announced_us,:amount_raised_announced_yen => bc.amount_raised_fund_announced_yen,:amount_raised_announced_uk => bc.amount_raised_fund_announced_uk,:amount_raised_announced_euro=> bc.amount_raised_fund_announced_euro,:raised_at_interim_date_one_euro => bc.raised_at_interim_date_one_euro, :raised_at_interim_date_one_us => bc.raised_at_interim_date_one_us, :raised_at_interim_date_one_uk => bc.raised_at_interim_date_one_uk, :raised_at_interim_date_one_yen => bc.raised_at_interim_date_one_yen, :raised_at_interim_date_two_euro => bc.raised_at_interim_date_second_euro, :raised_at_interim_date_two_us => bc.raised_at_interim_date_second_us, :raised_at_interim_date_two_uk => bc.raised_at_interim_date_second_uk,  :raised_at_interim_date_two_yen => bc.raised_at_interim_date_second_yen, :raised_at_interim_date_third_euro => bc.raised_at_interim_date_third_euro, :raised_at_interim_date_third_us => bc.raised_at_interim_date_third_us, :raised_at_interim_date_third_uk => bc.raised_at_interim_date_third_uk, :raised_at_interim_date_third_yen => bc.raised_at_interim_date_third_yen, :amount_raised_at_final_close_euro => bc.amount_raised_at_final_close_euro, :amount_raised_at_final_close_us => bc.amount_raised_at_final_close_us, :amount_raised_at_final_close_uk => bc.amount_raised_at_final_close_uk, :amount_raised_at_final_close_yen => bc.amount_raised_at_final_close_yen,  :amount_raised_at_first_close_euro => bc.amount_raised_at_first_close_euro,  :amount_raised_at_first_close_us => bc.amount_raised_at_first_close_us, :amount_raised_at_first_close_uk => bc.amount_raised_at_first_close_uk, :amount_raised_at_first_close_yen => bc.amount_raised_at_first_close_yen, :fund_structure_life => bc.fund_structure_life_export )
        

:fund_dry_powder => bc.fund_dry_powder

rescue Exception => e
          puts  "Error : Unable to save data for because #{e.message}"
          puts  "Error : Unable to save data for #{bc.id}"
        end
      end
    end
    logger.info "------Fund Export End#{Time.zone.now}----------------"
  end

  def self.lp_export
    logger = Logger.new("#{Rails.root}/log/export_log_check.log")
    logger.info "------Lp Export Start#{Time.zone.now}----------------"
    InstitutionCompanyInfo.transaction do
      LpExportData.delete_all
      InstitutionCompanyInfo.find_each(batch_size:100) do |cc|
        begin
          LpExportData.create(institution_company_info_id:cc.id,institution_name:cc.institution_name,country_name:cc.country_name_export,investor_type_name:cc.investor_type_name_export,investment_status_pei_name:cc.investment_status_pei_name_export,geographic_pref_pei_name:cc.geographic_pref_pei_name_export,fund_type_pref_pei_name:cc.fund_type_pref_pei_name_export,sector_pref_pei_name:cc.sector_pref_pei_name_export,average_investment_size:cc.average_investment_size_export,web:cc.web_export,address_details:cc.address_details_export,city_name:cc.city_name_export,postcode:cc.postcode_export,aum:cc.aum_export,amount_allocated_pe_empty:cc.return_empty_string,amount_invested_per_fund_min_value:cc.amount_invested_per_fund_min_value_export,amount_invested_per_fund_max_value:cc.amount_invested_per_fund_max_value_export,average_commitment_size_per_fund_value:cc.average_commitment_size_per_fund_value_export,average_commitment_size_per_year_value:cc.average_commitment_size_per_year_value_export,consider_debut_value:cc.consider_debut_value_export,co_investments_value:cc.co_investments_value_export)
        rescue Exception => e
          puts  "Error : Unable to save data for because #{e.message}"
          puts  "Error : Unable to save data for #{cc.id}"
        end
      end
    end
    logger.info "------Lp Export End#{Time.zone.now}----------------"
  end

  def self.exit_export
    logger = Logger.new("#{Rails.root}/log/export_log_check.log")
    logger.info "------Exit Export Start#{Time.zone.now}----------------"
    Exit.transaction do
      ExitExportData.delete_all
      Exit.by_site_status.find_each(batch_size:100) do |ee|
        begin
            if !ee.deal_exits.blank? && !ee.deal_exit_investors.blank?
              ee.deal_exits.each do |deal_exit|
                ee.deal_exit_investors.each do |exit_investor|


                  ExitExportData.create(exit_id: ee.id, exit_date: ee.exit_date_format_export, name: ee.name, exit_value: ee.exit_value_export, exit_route_name: ee.exit_route_name_export, industry_name: ee.industry_name_export, super_sector_name: ee.super_sector_name_export, basic_sector_name: ee.basic_sector_name_export, advanced_sector_name: ee.advanced_sector_name_export, country_name: ee.country_name_export, market: ee.market_export, acquirer: ee.acquirer_export, exit_investors_true: ee.exit_investors_true_export, exit_investors_false: ee.exit_investors_false_export, exit_description: ee.exit_description_export, investor_group_name: exit_investor.investor_group_name, final_exit: exit_investor.final_exit_status, irr: exit_investor.irr_export, money_multiple: exit_investor.money_multiple_export, exit_investor_execuitves: exit_investor.exit_investor_execuitves, company_name: deal_exit.deal.company_name, deal_announced_date: deal_exit.deal.deal_announced_format_export, deal_value: deal_exit.deal.deal_value_export, value_confidential: deal_exit.deal.value_confidential, value_estimate: deal_exit.deal.value_estimate, advanced_deal_type: deal_exit.deal.advanced_deal_type, deal_type_name: deal_exit.deal.deal_type_name, deal_vendor_name: deal_exit.deal.deal_vendor_name_export, vendor_type_name: deal_exit.deal.vendor_type_name_export, equity_syndicate: deal_exit.deal.equity_syndicate_export, equity_all: deal_exit.deal.equity_all_export, equity_lead: deal_exit.deal.equity_lead_export, mezzanine_syndicate: deal_exit.deal.mezzanine_syndicate_export, debt_syndicate: deal_exit.deal.debt_syndicate_export, custom_currency_value_of_equity: deal_exit.deal.custom_currency_value_of_equity_export, custom_total_mezzanine_amount: deal_exit.deal.custom_total_mezzanine_amount_export, total_debt_amount: deal_exit.deal.total_debt_amount_export, region_name: deal_exit.deal.region_name_export, city_name: deal_exit.deal.city_name_export, staff_count: deal_exit.deal.staff_count_export, ebit: deal_exit.deal.ebit_export, ebit_year: deal_exit.deal.ebit_year_export, ebit_forecast_str: deal_exit.deal.ebit_forecast_str, ebit_confidential_str: deal_exit.deal.ebit_confidential_str, ebitda: deal_exit.deal.ebitda_export, ebitda_year: deal_exit.deal.ebitda_year_export, ebitda_forecast_str: deal_exit.deal.ebitda_forecast_str, ebitda_confidential_str: deal_exit.deal.ebitda_confidential_str, turnover: deal_exit.deal.turnover_export, turnover_year: deal_exit.deal.turnover_year_export, turnover_forecast_str: deal_exit.deal.turnover_forecast_str, turnover_confidential_str: deal_exit.deal.turnover_confidential_str, deal_id:deal_exit.deal.id , :exit_value_euro_f => ee.exit_value_euro_est, :exit_value_yen_f => ee.exit_value_yen_est, :exit_value_uk_f => ee.exit_value_uk_est, :exit_value_us_f => ee.exit_value_us_est, deal_value_yen_f: deal_exit.deal.deal_value_yen_export, deal_value_euro_f:deal_exit.deal.deal_value_euro_export, deal_value_us_f:deal_exit.deal.deal_value_us_export, deal_value_uk_f:deal_exit.deal.deal_value_uk_export, deal_value_uk_est: deal_exit.deal.deal_value_uk_est, deal_value_us_est: deal_exit.deal.deal_value_us_est, deal_value_euro_est: deal_exit.deal.deal_value_euro_est, deal_value_yen_est: deal_exit.deal.deal_value_yen_est, :exit_value_check_est_us => ee.exit_value_check_est_us,:exit_value_check_est_uk => ee.exit_value_check_est_uk, :exit_value_check_est_yen => ee.exit_value_check_est_yen,:exit_value_check_est_euro => ee.exit_value_check_est_euro,:exit_value_euro => ee.exit_value_euro_f,:exit_value_yen => ee.exit_value_yen_f,:exit_value_us => ee.exit_value_us_f,:exit_value_uk => ee.exit_value_uk_f,:exit_date_value => ee.exit_date, :total_debt_amount_us => deal_exit.deal.total_debt_amount_us_export, :total_debt_amount_uk => deal_exit.deal.total_debt_amount_uk_export, :total_debt_amount_yen => deal_exit.deal.total_debt_amount_yen_export, :total_debt_amount_euro => deal_exit.deal.total_debt_amount_euro_export, :ebit_uk => deal_exit.deal.ebit_uk_export, :ebit_uk_conf => deal_exit.deal.ebit_uk_conf_export, :ebit_us => deal_exit.deal.ebit_us_export, :ebit_us_conf => deal_exit.deal.ebit_us_conf_export, :ebit_yen => deal_exit.deal.ebit_yen_export, :ebit_yen_conf => deal_exit.deal.ebit_yen_conf_export, :ebit_euro => deal_exit.deal.ebit_euro_export, :ebit_euro_conf => deal_exit.deal.ebit_euro_conf_export, :ebitda_uk => deal_exit.deal.ebitda_uk_export, :ebitda_uk_conf => deal_exit.deal.ebitda_uk_conf_export, :ebitda_us => deal_exit.deal.ebitda_us_export, :ebitda_us_conf => deal_exit.deal.ebitda_us_conf_export, :ebitda_yen => deal_exit.deal.ebitda_yen_export, :ebitda_yen_conf => deal_exit.deal.ebitda_yen_conf_export, :ebitda_euro => deal_exit.deal.ebitda_euro_export, :ebitda_euro_conf => deal_exit.deal.ebitda_euro_conf_export, :turnover_uk => deal_exit.deal.turnover_uk_export, :turnover_uk_conf => deal_exit.deal.turnover_uk_conf_export, :turnover_us => deal_exit.deal.turnover_us_export, :turnover_us_conf => deal_exit.deal.turnover_us_conf_export, :turnover_yen => deal_exit.deal.turnover_yen_export, :turnover_yen_conf => deal_exit.deal.turnover_yen_conf_export, :turnover_euro => deal_exit.deal.turnover_euro_export, :turnover_euro_conf => deal_exit.deal.turnover_euro_conf_export,


addd

:deal_company_information => ActionController::Base.helpers.strip_tags(deal_exit.deal.company_information).strip)



                end
              end

            elsif !ee.deal_exits.blank? && ee.deal_exit_investors.blank?
              ee.deal_exits.each do |deal_exit|
                ExitExportData.create(exit_id: ee.id, exit_date: ee.exit_date_format_export, name: ee.name, exit_value: ee.exit_value_export, exit_route_name: ee.exit_route_name_export, industry_name: ee.industry_name_export, super_sector_name: ee.super_sector_name_export, basic_sector_name: ee.basic_sector_name_export, advanced_sector_name: ee.advanced_sector_name_export, country_name: ee.country_name_export, market: ee.market_export, acquirer: ee.acquirer_export, exit_investors_true: ee.exit_investors_true_export, exit_investors_false: ee.exit_investors_false_export, exit_description: ee.exit_description_export, investor_group_name: "n/d", final_exit: "n/d", irr: "n/d", money_multiple: "n/d", exit_investor_execuitves: "n/d", company_name: deal_exit.deal.company_name, deal_announced_date: deal_exit.deal.deal_announced_format_export, deal_value: deal_exit.deal.deal_value_export, value_confidential: deal_exit.deal.value_confidential, value_estimate: deal_exit.deal.value_estimate, advanced_deal_type: deal_exit.deal.advanced_deal_type, deal_type_name: deal_exit.deal.deal_type_name, deal_vendor_name: deal_exit.deal.deal_vendor_name_export, vendor_type_name: deal_exit.deal.vendor_type_name_export, equity_syndicate: deal_exit.deal.equity_syndicate_export, equity_all: deal_exit.deal.equity_all_export, equity_lead: deal_exit.deal.equity_lead_export, mezzanine_syndicate: deal_exit.deal.mezzanine_syndicate_export, debt_syndicate: deal_exit.deal.debt_syndicate_export, custom_currency_value_of_equity: deal_exit.deal.custom_currency_value_of_equity_export, custom_total_mezzanine_amount: deal_exit.deal.custom_total_mezzanine_amount_export, total_debt_amount: deal_exit.deal.total_debt_amount_export, region_name: deal_exit.deal.region_name_export, city_name: deal_exit.deal.city_name_export, staff_count: deal_exit.deal.staff_count_export, ebit: deal_exit.deal.ebit_export, ebit_year: deal_exit.deal.ebit_year_export, ebit_forecast_str: deal_exit.deal.ebit_forecast_str, ebit_confidential_str: deal_exit.deal.ebit_confidential_str, ebitda: deal_exit.deal.ebitda_export, ebitda_year: deal_exit.deal.ebitda_year_export, ebitda_forecast_str: deal_exit.deal.ebitda_forecast_str, ebitda_confidential_str: deal_exit.deal.ebitda_confidential_str, turnover: deal_exit.deal.turnover_export, turnover_year: deal_exit.deal.turnover_year_export, turnover_forecast_str: deal_exit.deal.turnover_forecast_str, turnover_confidential_str: deal_exit.deal.turnover_confidential_str, deal_id:deal_exit.deal.id, :exit_value_euro_f => ee.exit_value_euro_est, :exit_value_yen_f => ee.exit_value_yen_est, :exit_value_uk_f => ee.exit_value_uk_est, :exit_value_us_f => ee.exit_value_us_est, deal_value_yen_f: deal_exit.deal.deal_value_yen_export, deal_value_euro_f:deal_exit.deal.deal_value_euro_export, deal_value_us_f:deal_exit.deal.deal_value_us_export, deal_value_uk_f:deal_exit.deal.deal_value_uk_export, deal_value_uk_est: deal_exit.deal.deal_value_uk_est, deal_value_us_est: deal_exit.deal.deal_value_us_est, deal_value_euro_est: deal_exit.deal.deal_value_euro_est, deal_value_yen_est: deal_exit.deal.deal_value_yen_est, :exit_value_check_est_us => ee.exit_value_check_est_us,:exit_value_check_est_uk => ee.exit_value_check_est_uk, :exit_value_check_est_yen => ee.exit_value_check_est_yen,:exit_value_check_est_euro => ee.exit_value_check_est_euro,:exit_value_euro => ee.exit_value_euro_f,:exit_value_yen => ee.exit_value_yen_f,:exit_value_us => ee.exit_value_us_f,:exit_value_uk => ee.exit_value_uk_f,:exit_date_value => ee.exit_date, :total_debt_amount_us => deal_exit.deal.total_debt_amount_us_export, :total_debt_amount_uk => deal_exit.deal.total_debt_amount_uk_export, :total_debt_amount_yen => deal_exit.deal.total_debt_amount_yen_export, :total_debt_amount_euro => deal_exit.deal.total_debt_amount_euro_export , :ebit_uk => deal_exit.deal.ebit_uk_export, :ebit_uk_conf => deal_exit.deal.ebit_uk_conf_export, :ebit_us => deal_exit.deal.ebit_us_export, :ebit_us_conf => deal_exit.deal.ebit_us_conf_export, :ebit_yen => deal_exit.deal.ebit_yen_export, :ebit_yen_conf => deal_exit.deal.ebit_yen_conf_export, :ebit_euro => deal_exit.deal.ebit_euro_export, :ebit_euro_conf => deal_exit.deal.ebit_euro_conf_export, :ebitda_uk => deal_exit.deal.ebitda_uk_export, :ebitda_uk_conf => deal_exit.deal.ebitda_uk_conf_export, :ebitda_us => deal_exit.deal.ebitda_us_export, :ebitda_us_conf => deal_exit.deal.ebitda_us_conf_export, :ebitda_yen => deal_exit.deal.ebitda_yen_export, :ebitda_yen_conf => deal_exit.deal.ebitda_yen_conf_export, :ebitda_euro => deal_exit.deal.ebitda_euro_export, :ebitda_euro_conf => deal_exit.deal.ebitda_euro_conf_export, :turnover_uk => deal_exit.deal.turnover_uk_export, :turnover_uk_conf => deal_exit.deal.turnover_uk_conf_export, :turnover_us => deal_exit.deal.turnover_us_export, :turnover_us_conf => deal_exit.deal.turnover_us_conf_export, :turnover_yen => deal_exit.deal.turnover_yen_export, :turnover_yen_conf => deal_exit.deal.turnover_yen_conf_export, :turnover_euro => deal_exit.deal.turnover_euro_export, :turnover_euro_conf => deal_exit.deal.turnover_euro_conf_export,


add
:deal_company_information => ActionController::Base.helpers.strip_tags(deal_exit.deal.company_information).strip)

:fund_dry_powder => ActionController::Base.helpers.strip_tags(fund.dry_powders.percentage_deployed).strip)

n              end

            elsif ee.deal_exits.blank? && !ee.deal_exit_investors.blank?
              ee.deal_exit_investors.each do |exit_investor|
                ExitExportData.create(exit_id: ee.id, exit_date: ee.exit_date_format_export, name: ee.name, exit_value: ee.exit_value_export, exit_route_name: ee.exit_route_name_export, industry_name: ee.industry_name_export, super_sector_name: ee.super_sector_name_export, basic_sector_name: ee.basic_sector_name_export, advanced_sector_name: ee.advanced_sector_name_export, country_name: ee.country_name_export, market: ee.market_export, acquirer: ee.acquirer_export, exit_investors_true: ee.exit_investors_true_export, exit_investors_false: ee.exit_investors_false_export, exit_description: ee.exit_description_export, investor_group_name: exit_investor.investor_group_name, final_exit: exit_investor.final_exit_status, irr: exit_investor.irr_export, money_multiple: exit_investor.money_multiple_export, exit_investor_execuitves: exit_investor.exit_investor_execuitves, company_name: "n/d", deal_announced_date: "n/d", deal_value: "n/d", value_confidential: "n/d", value_estimate: "n/d", advanced_deal_type: "n/d", deal_type_name: "n/d", deal_vendor_name: "n/d", vendor_type_name: "n/d", equity_syndicate: "n/d", equity_all: "n/d", equity_lead: "n/d", mezzanine_syndicate: "n/d", debt_syndicate: "n/d", custom_currency_value_of_equity: "n/d", custom_total_mezzanine_amount: "n/d", total_debt_amount: "n/d", region_name: "n/d", city_name: "n/d", staff_count: "n/d", ebit: "n/d", ebit_year: "n/d", ebit_forecast_str: "n/d", ebit_confidential_str: "n/d", ebitda: "n/d", ebitda_year: "n/d", ebitda_forecast_str: "n/d", ebitda_confidential_str: "n/d", turnover: "n/d", turnover_year: "n/d", turnover_forecast_str: "n/d", turnover_confidential_str: "n/d", :exit_value_euro_f => ee.exit_value_euro_est, :exit_value_yen_f => ee.exit_value_yen_est, :exit_value_uk_f => ee.exit_value_uk_est, :exit_value_us_f => ee.exit_value_us_est, :exit_value_check_est_us => ee.exit_value_check_est_us,:exit_value_check_est_uk => ee.exit_value_check_est_uk, :exit_value_check_est_yen => ee.exit_value_check_est_yen,:exit_value_check_est_euro => ee.exit_value_check_est_euro,:exit_value_euro => ee.exit_value_euro_f,:exit_value_yen => ee.exit_value_yen_f,:exit_value_us => ee.exit_value_us_f,:exit_value_uk => ee.exit_value_uk_f,:exit_date_value => ee.exit_date , :ebit_uk => "n/d", :ebit_uk_conf => "n/d", :ebit_us => "n/d", :ebit_us_conf => "n/d", :ebit_yen => "n/d", :ebit_yen_conf => "n/d", :ebit_euro => "n/d", :ebit_euro_conf => "n/d", :ebitda_uk => "n/d", :ebitda_uk_conf => "n/d", :ebitda_us => "n/d", :ebitda_us_conf => "n/d", :ebitda_yen => "n/d", :ebitda_yen_conf => "n/d", :ebitda_euro => "n/d", :ebitda_euro_conf => "n/d", :turnover_uk => "n/d", :turnover_uk_conf => "n/d", :turnover_us => "n/d", :turnover_us_conf => "n/d", :turnover_yen => "n/d", :turnover_yen_conf => "n/d", :turnover_euro => "n/d", :turnover_euro_conf => "n/d" )
              end
            else
              ExitExportData.create(exit_id: ee.id, exit_date: ee.exit_date_format_export, name: ee.name, exit_value: ee.exit_value_export, exit_route_name: ee.exit_route_name_export, industry_name: ee.industry_name_export, super_sector_name: ee.super_sector_name_export, basic_sector_name: ee.basic_sector_name_export, advanced_sector_name: ee.advanced_sector_name_export, country_name: ee.country_name_export, market: ee.market_export, acquirer: ee.acquirer_export, exit_investors_true: ee.exit_investors_true_export, exit_investors_false: ee.exit_investors_false_export, exit_description: ee.exit_description_export, investor_group_name: "n/d", final_exit: "n/d", irr: "n/d", money_multiple: "n/d", exit_investor_execuitves: "n/d", company_name: "n/d", deal_announced_date: "n/d", deal_value: "n/d", value_confidential: "n/d", value_estimate: "n/d", advanced_deal_type: "n/d", deal_type_name: "n/d", deal_vendor_name: "n/d", vendor_type_name: "n/d", equity_syndicate: "n/d", equity_all: "n/d", equity_lead: "n/d", mezzanine_syndicate: "n/d", debt_syndicate: "n/d", custom_currency_value_of_equity: "n/d", custom_total_mezzanine_amount: "n/d", total_debt_amount: "n/d", region_name: "n/d", city_name: "n/d", staff_count: "n/d", ebit: "n/d", ebit_year: "n/d", ebit_forecast_str: "n/d", ebit_confidential_str: "n/d", ebitda: "n/d", ebitda_year: "n/d", ebitda_forecast_str: "n/d", ebitda_confidential_str: "n/d", turnover: "n/d", turnover_year: "n/d", turnover_forecast_str: "n/d", turnover_confidential_str: "n/d", :exit_value_euro_f => ee.exit_value_euro_est, :exit_value_yen_f => ee.exit_value_yen_est, :exit_value_uk_f => ee.exit_value_uk_est, :exit_value_us_f => ee.exit_value_us_est, :exit_value_check_est_us => ee.exit_value_check_est_us,:exit_value_check_est_uk => ee.exit_value_check_est_uk, :exit_value_check_est_yen => ee.exit_value_check_est_yen,:exit_value_check_est_euro => ee.exit_value_check_est_euro,:exit_value_euro => ee.exit_value_euro_f,:exit_value_yen => ee.exit_value_yen_f,:exit_value_us => ee.exit_value_us_f,:exit_value_uk => ee.exit_value_uk_f,:exit_date_value => ee.exit_date , :ebit_uk => "n/d", :ebit_uk_conf => "n/d", :ebit_us => "n/d", :ebit_us_conf => "n/d", :ebit_yen => "n/d", :ebit_yen_conf => "n/d", :ebit_euro => "n/d", :ebit_euro_conf => "n/d", :ebitda_uk => "n/d", :ebitda_uk_conf => "n/d", :ebitda_us => "n/d", :ebitda_us_conf => "n/d", :ebitda_yen => "n/d", :ebitda_yen_conf => "n/d", :ebitda_euro => "n/d", :ebitda_euro_conf => "n/d", :turnover_uk => "n/d", :turnover_uk_conf => "n/d", :turnover_us => "n/d", :turnover_us_conf => "n/d", :turnover_yen => "n/d", :turnover_yen_conf => "n/d", :turnover_euro => "n/d", :turnover_euro_conf => "n/d" )
            end
        rescue Exception => e
          puts  "Error : Unable to save data for because #{e.message}"
          puts  "Error : Unable to save data for #{ee.id}"
        end
      end
    end
    logger.info "------Exit Export end#{Time.zone.now}----------------"
  end

  def self.advisor_wsw_export
    logger = Logger.new("#{Rails.root}/log/export_log_check.log")
    logger.info "------AdvisorGroupExecutiveWsw Export Start#{Time.zone.now}----------------"
    AdvisorGroupExecutiveWsw.transaction do
      AdvisorWswExportData.delete_all
      AdvisorGroupExecutiveWsw.find_each(batch_size:100) do |agw|
        begin
            if !agw.all_deals_status_applied.blank?
              agw.all_deals_status_applied.each do |dea|
                if dea.deal_exits.blank?
                  AdvisorWswExportData.create(advisor_group_wsw_id: agw.id, full_name: agw.full_name, executive_position_name: agw.executive_position_name_export, total_deal: agw.total_deal, deal_value: agw.deal_value_export, deal_value_avg: agw.deal_value_avg, advisor_company_name: agw.advisor_company_name, company_type: agw.company_type, location_name: agw.location_name_export, advice_to: agw.advice_to_export, geo_focus: agw.geo_focus_export, company_name: dea.company_name, deal_announced_date: dea.deal_announced_format_export, country_name: dea.country_name, city_name: dea.city_name_export, industry_name: dea.industry_name, super_sector_name: dea.super_sector_name, value_confidential: dea.value_confidential, value_estimate: dea.value_estimate, advanced_deal_type: dea.advanced_deal_type, deal_type_name: dea.deal_type_name, basic_sector_name: dea.basic_sector_name, sector_name: dea.sector_name, vendor_type_name: dea.vendor_type_name_export, deal_vendor_name: dea.deal_vendor_name_export, equity_all: dea.equity_all_export, equity_lead: dea.equity_lead_export, equity_syndicate: dea.equity_syndicate_export, mezzanine_syndicate: dea.mezzanine_syndicate_export, debt_syndicate: dea.debt_syndicate_export, custom_currency_value_of_equity: dea.custom_currency_value_of_equity_export, custom_total_mezzanine_amount: dea.custom_total_mezzanine_amount_export, funding_round: dea.funding_round_export, introduced_to_investor: dea.introduced_to_investor_export, majority_minority_stake: dea.majority_minority_stake_export, legal_advisers: dea.legal_advisers_export, corporate_finance_advisers: dea.corporate_finance_advisers_export, commercial_due_diligence_advisers: dea.commercial_due_diligence_advisers_export, environmental_due_diligence_advisers: dea.environmental_due_diligence_advisers_export, financial_due_diligence_advisers: dea.financial_due_diligence_advisers_export, insurance_due_diligence_advisers: dea.insurance_due_diligence_advisers_export, other_due_diligence_advisers: dea.other_due_diligence_advisers_export, accounting_advisers: dea.accounting_advisers_export, actuarial_advisor: dea.actuarial_advisor_export, sponsor_broker_advisor: dea.sponsor_broker_advisor_export, tax_advisers: dea.tax_advisers_export, other_advisers: dea.other_advisers_export, company_founded: dea.company_founded_export, region_name: dea.region_name, staff_count: dea.staff_count, ebit: dea.ebit_export, ebit_year: dea.ebit_year_export, ebit_forecast_str: dea.ebit_forecast_str, ebit_confidential_str: dea.ebit_confidential_str, ebitda_export: dea.ebitda_export, ebitda_year_export: dea.ebitda_year_export, ebitda_forecast_str: dea.ebitda_forecast_str, ebitda_confidential_str: dea.ebitda_confidential_str, turnover_export: dea.turnover_export, turnover_year_export: dea.turnover_year_export, turnover_forecast_str: dea.turnover_forecast_str, turnover_confidential_str: dea.turnover_confidential_str, exit_value: "n/d", exit_route_name: "n/d", exit_status: "n/d", exit_date: "n/d", market: "n/d", acquirer: "n/d", exit_investors_true: "n/d", exit_investors_false: "n/d", deal_id:dea.id, deal_value_us_f:dea.deal_value_us_est, deal_value_uk_f:dea.deal_value_uk_est, deal_value_euro_f:dea.deal_value_euro_est, deal_value_yen_f:dea.deal_value_yen_est, total_deal_value_us_f:agw.total_deal_us_export , total_deal_value_uk_f:agw.total_deal_uk_export, total_deal_value_euro_f:agw.total_deal_euro_export, total_deal_value_yen_f:agw.total_deal_yen_export, avg_deal_value_us_f:agw.deal_avg_us_export, avg_deal_value_uk_f:agw.deal_avg_uk_export, avg_deal_value_euro_f:agw.deal_avg_euro_export, avg_deal_value_yen_f:agw.deal_avg_yen_export, deal_value_us_conf:dea.deal_value_us_export, deal_value_uk_conf:dea.deal_value_uk_export, deal_value_euro_conf:dea.deal_value_euro_export, deal_value_yen_conf:dea.deal_value_yen_export,:exit_value_check_est_us => "n/d",:exit_value_check_est_uk => "n/d", :exit_value_check_est_yen => "n/d",:exit_value_check_est_euro => "n/d" , :ebit_uk => dea.ebit_uk_export, :ebit_uk_conf => dea.ebit_uk_conf_export, :ebit_us => dea.ebit_us_export, :ebit_us_conf => dea.ebit_us_conf_export, :ebit_yen => dea.ebit_yen_export, :ebit_yen_conf => dea.ebit_yen_conf_export, :ebit_euro => dea.ebit_euro_export, :ebit_euro_conf => dea.ebit_euro_conf_export, :ebitda_uk => dea.ebitda_uk_export, :ebitda_uk_conf => dea.ebitda_uk_conf_export, :ebitda_us => dea.ebitda_us_export, :ebitda_us_conf => dea.ebitda_us_conf_export, :ebitda_yen => dea.ebitda_yen_export, :ebitda_yen_conf => dea.ebitda_yen_conf_export, :ebitda_euro => dea.ebitda_euro_export, :ebitda_euro_conf => dea.ebitda_euro_conf_export, :turnover_uk => dea.turnover_uk_export, :turnover_uk_conf => dea.turnover_uk_conf_export, :turnover_us => dea.turnover_us_export, :turnover_us_conf => dea.turnover_us_conf_export, :turnover_yen => dea.turnover_yen_export, :turnover_yen_conf => dea.turnover_yen_conf_export, :turnover_euro => dea.turnover_euro_export, :turnover_euro_conf => dea.turnover_euro_conf_export)
                else
                  AdvisorWswExportData.create(advisor_group_wsw_id: agw.id, full_name: agw.full_name, executive_position_name: agw.executive_position_name_export, total_deal: agw.total_deal, deal_value: agw.deal_value_export, deal_value_avg: agw.deal_value_avg, advisor_company_name: agw.advisor_company_name, company_type: agw.company_type, location_name: agw.location_name_export, advice_to: agw.advice_to_export, geo_focus: agw.geo_focus_export, company_name: dea.company_name, deal_announced_date: dea.deal_announced_format_export, country_name: dea.country_name, city_name: dea.city_name_export, industry_name: dea.industry_name, super_sector_name: dea.super_sector_name, value_confidential: dea.value_confidential, value_estimate: dea.value_estimate, advanced_deal_type: dea.advanced_deal_type, deal_type_name: dea.deal_type_name, basic_sector_name: dea.basic_sector_name, sector_name: dea.sector_name, vendor_type_name: dea.vendor_type_name_export, deal_vendor_name: dea.deal_vendor_name_export, equity_all: dea.equity_all_export, equity_lead: dea.equity_lead_export, equity_syndicate: dea.equity_syndicate_export, mezzanine_syndicate: dea.mezzanine_syndicate_export, debt_syndicate: dea.debt_syndicate_export, custom_currency_value_of_equity: dea.custom_currency_value_of_equity_export, custom_total_mezzanine_amount: dea.custom_total_mezzanine_amount_export, funding_round: dea.funding_round_export, introduced_to_investor: dea.introduced_to_investor_export, majority_minority_stake: dea.majority_minority_stake_export, legal_advisers: dea.legal_advisers_export, corporate_finance_advisers: dea.corporate_finance_advisers_export, commercial_due_diligence_advisers: dea.commercial_due_diligence_advisers_export, environmental_due_diligence_advisers: dea.environmental_due_diligence_advisers_export, financial_due_diligence_advisers: dea.financial_due_diligence_advisers_export, insurance_due_diligence_advisers: dea.insurance_due_diligence_advisers_export, other_due_diligence_advisers: dea.other_due_diligence_advisers_export, accounting_advisers: dea.accounting_advisers_export, actuarial_advisor: dea.actuarial_advisor_export, sponsor_broker_advisor: dea.sponsor_broker_advisor_export, tax_advisers: dea.tax_advisers_export, other_advisers: dea.other_advisers_export, company_founded: dea.company_founded_export, region_name: dea.region_name, staff_count: dea.staff_count, ebit: dea.ebit_export, ebit_year: dea.ebit_year_export, ebit_forecast_str: dea.ebit_forecast_str, ebit_confidential_str: dea.ebit_confidential_str, ebitda_export: dea.ebitda_export, ebitda_year_export: dea.ebitda_year_export, ebitda_forecast_str: dea.ebitda_forecast_str, ebitda_confidential_str: dea.ebitda_confidential_str, turnover_export: dea.turnover_export, turnover_year_export: dea.turnover_year_export, turnover_forecast_str: dea.turnover_forecast_str, turnover_confidential_str: dea.turnover_confidential_str, exit_value: dea.deal_exits.first.exit.exit_value_export, exit_route_name: dea.deal_exits.first.exit.exit_route_name, exit_status: dea.deal_exits.first.exit.exit_status_export, exit_date: dea.deal_exits.first.exit.exit_date_format_export, market: dea.deal_exits.first.exit.market_export, acquirer: dea.deal_exits.first.exit.acquirer_export, exit_investors_true: dea.deal_exits.first.exit.exit_investors_true_export, exit_investors_false: dea.deal_exits.first.exit.exit_investors_false_export, exit_id:dea.deal_exits.first.exit.id, deal_id:dea.id, deal_value_us_f:dea.deal_value_us_est, deal_value_uk_f:dea.deal_value_uk_est, deal_value_euro_f:dea.deal_value_euro_est, deal_value_yen_f:dea.deal_value_yen_est, total_deal_value_us_f:agw.total_deal_us_export , total_deal_value_uk_f:agw.total_deal_uk_export, total_deal_value_euro_f:agw.total_deal_euro_export, total_deal_value_yen_f:agw.total_deal_yen_export, avg_deal_value_us_f:agw.deal_avg_us_export, avg_deal_value_uk_f:agw.deal_avg_uk_export, avg_deal_value_euro_f:agw.deal_avg_euro_export, avg_deal_value_yen_f:agw.deal_avg_yen_export, deal_value_us_conf:dea.deal_value_us_export, deal_value_uk_conf:dea.deal_value_uk_export, deal_value_euro_conf:dea.deal_value_euro_export, deal_value_yen_conf:dea.deal_value_yen_export,:exit_value_check_est_us => dea.deal_exits.first.exit.exit_value_check_est_us,:exit_value_check_est_uk => dea.deal_exits.first.exit.exit_value_check_est_uk, :exit_value_check_est_yen => dea.deal_exits.first.exit.exit_value_check_est_yen,:exit_value_check_est_euro => dea.deal_exits.first.exit.exit_value_check_est_euro , :ebit_uk => dea.ebit_uk_export, :ebit_uk_conf => dea.ebit_uk_conf_export, :ebit_us => dea.ebit_us_export, :ebit_us_conf => dea.ebit_us_conf_export, :ebit_yen => dea.ebit_yen_export, :ebit_yen_conf => dea.ebit_yen_conf_export, :ebit_euro => dea.ebit_euro_export, :ebit_euro_conf => dea.ebit_euro_conf_export, :ebitda_uk => dea.ebitda_uk_export, :ebitda_uk_conf => dea.ebitda_uk_conf_export, :ebitda_us => dea.ebitda_us_export, :ebitda_us_conf => dea.ebitda_us_conf_export, :ebitda_yen => dea.ebitda_yen_export, :ebitda_yen_conf => dea.ebitda_yen_conf_export, :ebitda_euro => dea.ebitda_euro_export, :ebitda_euro_conf => dea.ebitda_euro_conf_export, :turnover_uk => dea.turnover_uk_export, :turnover_uk_conf => dea.turnover_uk_conf_export, :turnover_us => dea.turnover_us_export, :turnover_us_conf => dea.turnover_us_conf_export, :turnover_yen => dea.turnover_yen_export, :turnover_yen_conf => dea.turnover_yen_conf_export, :turnover_euro => dea.turnover_euro_export, :turnover_euro_conf => dea.turnover_euro_conf_export )
                end
              end
            end
        rescue Exception => e
          puts  "Error : Unable to save data for because #{e.message}"
          puts  "Error : Unable to save data for #{agw.id}"
        end
      end
    end
    logger.info "------AdvisorGroupExecutiveWsw Export End#{Time.zone.now}----------------"
  end

  def self.investor_wsw_export
    logger = Logger.new("#{Rails.root}/log/export_log_check.log")
    logger.info "------InvestorGroupExecutiveWsw Export Start#{Time.zone.now}----------------"
    InvestorGroupExecutiveWsw.transaction do
      InvestorWswExportData.delete_all
      InvestorGroupExecutiveWsw.find_each(batch_size:100) do |igw|
        begin
            if !igw.all_deals_status_applied.blank?
                igw.all_deals_status_applied.each do |dea|
                  if dea.deal_exits.blank?
                    InvestorWswExportData.create(investor_group_wsw_id: igw.id, full_name: igw.full_name,full_name_sort: igw.full_name_sort, executive_position_name: igw.executive_position_name_export, total_deal: igw.total_deal, deal_value: igw.deal_value_export, deal_value_avg: igw.deal_value_avg, location_name: igw.location_name_export, investor_company_name: igw.investor_company_name, geo_focus: igw.geo_focus_export, company_name: dea.company_name, deal_announced_date: dea.deal_announced_format_export, country_name: dea.country_name, region_name: dea.region_name, city_name: dea.city_name_export, value_confidential: dea.value_confidential, value_estimate: dea.value_estimate, advanced_deal_type: dea.advanced_deal_type, deal_type_name: dea.deal_type_name, industry_name: dea.industry_name, super_sector_name: dea.super_sector_name, basic_sector_name: dea.basic_sector_name, sector_name: dea.sector_name, company_information_text: dea.company_information_text_export, vendor_type_name: dea.vendor_type_name_export, deal_vendor_name: dea.deal_vendor_name_export, equity_all: dea.equity_all_export, equity_lead: dea.equity_lead_export, equity_syndicate: dea.equity_syndicate_export, mezzanine_syndicate: dea.mezzanine_syndicate_export, debt_syndicate: dea.debt_syndicate_export, funding_round: dea.funding_round_export, company_founded: dea.company_founded_export, introduced_to_investor: dea.introduced_to_investor_export, majority_minority_stake: dea.majority_minority_stake_export, staff_count: dea.staff_count, ebit: dea.ebit_export, ebit_year: dea.ebit_year_export, ebit_forecast_str: dea.ebit_forecast_str, ebit_confidential_str: dea.ebit_confidential_str, ebitda: dea.ebitda_export, ebitda_year: dea.ebitda_year_export, ebitda_forecast_str: dea.ebitda_forecast_str, ebitda_confidential_str: dea.ebitda_confidential_str, turnover: dea.turnover_export, turnover_year: dea.turnover_year_export, turnover_forecast_str: dea.turnover_forecast_str, turnover_confidential_str: dea.turnover_confidential_str, exit_value: "n/d", exit_route_name: "n/d", exit_status: "n/d", exit_date: "n/d", market: "n/d", acquirer: "n/d", exit_description: "n/d", exit_investors_true: "n/d", exit_investors_false: "n/d", deal_id: dea.id, deal_value_us_f:dea.deal_value_us_est, deal_value_uk_f:dea.deal_value_uk_est, deal_value_euro_f:dea.deal_value_euro_est, deal_value_yen_f:dea.deal_value_yen_est, total_deal_value_us_f:igw.total_deal_us_export , total_deal_value_uk_f:igw.total_deal_uk_export, total_deal_value_euro_f:igw.total_deal_euro_export, total_deal_value_yen_f:igw.total_deal_yen_export, avg_deal_value_us_f:igw.deal_avg_us_export, avg_deal_value_uk_f:igw.deal_avg_uk_export, avg_deal_value_euro_f:igw.deal_avg_euro_export, avg_deal_value_yen_f:igw.deal_avg_yen_export, deal_value_us_conf:dea.deal_value_us_export, deal_value_uk_conf:dea.deal_value_uk_export, deal_value_euro_conf:dea.deal_value_euro_export, deal_value_yen_conf:dea.deal_value_yen_export,:exit_value_check_est_us => "n/d",:exit_value_check_est_uk => "n/d", :exit_value_check_est_yen => "n/d",:exit_value_check_est_euro => "n/d" , :ebit_uk => dea.ebit_uk_export, :ebit_uk_conf => dea.ebit_uk_conf_export, :ebit_us => dea.ebit_us_export, :ebit_us_conf => dea.ebit_us_conf_export, :ebit_yen => dea.ebit_yen_export, :ebit_yen_conf => dea.ebit_yen_conf_export, :ebit_euro => dea.ebit_euro_export, :ebit_euro_conf => dea.ebit_euro_conf_export, :ebitda_uk => dea.ebitda_uk_export, :ebitda_uk_conf => dea.ebitda_uk_conf_export, :ebitda_us => dea.ebitda_us_export, :ebitda_us_conf => dea.ebitda_us_conf_export, :ebitda_yen => dea.ebitda_yen_export, :ebitda_yen_conf => dea.ebitda_yen_conf_export, :ebitda_euro => dea.ebitda_euro_export, :ebitda_euro_conf => dea.ebitda_euro_conf_export, :turnover_uk => dea.turnover_uk_export, :turnover_uk_conf => dea.turnover_uk_conf_export, :turnover_us => dea.turnover_us_export, :turnover_us_conf => dea.turnover_us_conf_export, :turnover_yen => dea.turnover_yen_export, :turnover_yen_conf => dea.turnover_yen_conf_export, :turnover_euro => dea.turnover_euro_export, :turnover_euro_conf => dea.turnover_euro_conf_export )
                  else
                    InvestorWswExportData.create(investor_group_wsw_id: igw.id, full_name: igw.full_name, full_name_sort: igw.full_name_sort, executive_position_name: igw.executive_position_name_export, total_deal: igw.total_deal, deal_value: igw.deal_value_export, deal_value_avg: igw.deal_value_avg, location_name: igw.location_name_export, investor_company_name: igw.investor_company_name, geo_focus: igw.geo_focus_export, company_name: dea.company_name, deal_announced_date: dea.deal_announced_format_export, country_name: dea.country_name, region_name: dea.region_name, city_name: dea.city_name_export, value_confidential: dea.value_confidential, value_estimate: dea.value_estimate, advanced_deal_type: dea.advanced_deal_type, deal_type_name: dea.deal_type_name, industry_name: dea.industry_name, super_sector_name: dea.super_sector_name, basic_sector_name: dea.basic_sector_name, sector_name: dea.sector_name, company_information_text: dea.company_information_text_export, vendor_type_name: dea.vendor_type_name_export, deal_vendor_name: dea.deal_vendor_name_export, equity_all: dea.equity_all_export, equity_lead: dea.equity_lead_export, equity_syndicate: dea.equity_syndicate_export, mezzanine_syndicate: dea.mezzanine_syndicate_export, debt_syndicate: dea.debt_syndicate_export, funding_round: dea.funding_round_export, company_founded: dea.company_founded_export, introduced_to_investor: dea.introduced_to_investor_export, majority_minority_stake: dea.majority_minority_stake_export, staff_count: dea.staff_count, ebit: dea.ebit_export, ebit_year: dea.ebit_year_export, ebit_forecast_str: dea.ebit_forecast_str, ebit_confidential_str: dea.ebit_confidential_str, ebitda: dea.ebitda_export, ebitda_year: dea.ebitda_year_export, ebitda_forecast_str: dea.ebitda_forecast_str, ebitda_confidential_str: dea.ebitda_confidential_str, turnover: dea.turnover_export, turnover_year: dea.turnover_year_export, turnover_forecast_str: dea.turnover_forecast_str, turnover_confidential_str: dea.turnover_confidential_str, exit_value: dea.deal_exits.first.exit.exit_value_export, exit_route_name: dea.deal_exits.first.exit.exit_route_name, exit_status: dea.deal_exits.first.exit.exit_status_export, exit_date: dea.deal_exits.first.exit.exit_date_format_export, market: dea.deal_exits.first.exit.market_export, acquirer: dea.deal_exits.first.exit.acquirer_export, exit_description: dea.deal_exits.first.exit.exit_description_export, exit_investors_true: dea.deal_exits.first.exit.exit_investors_true_export, exit_investors_false: dea.deal_exits.first.exit.exit_investors_false_export, exit_id: dea.single_exit_id_export, deal_id: dea.id, deal_value_us_f:dea.deal_value_us_est, deal_value_uk_f:dea.deal_value_uk_est, deal_value_euro_f:dea.deal_value_euro_est, deal_value_yen_f:dea.deal_value_yen_est, total_deal_value_us_f:igw.total_deal_us_export , total_deal_value_uk_f:igw.total_deal_uk_export, total_deal_value_euro_f:igw.total_deal_euro_export, total_deal_value_yen_f:igw.total_deal_yen_export, avg_deal_value_us_f:igw.deal_avg_us_export, avg_deal_value_uk_f:igw.deal_avg_uk_export, avg_deal_value_euro_f:igw.deal_avg_euro_export, avg_deal_value_yen_f:igw.deal_avg_yen_export, deal_value_us_conf:dea.deal_value_us_export, deal_value_uk_conf:dea.deal_value_uk_export, deal_value_euro_conf:dea.deal_value_euro_export, deal_value_yen_conf:dea.deal_value_yen_export,:exit_value_check_est_us => dea.deal_exits.first.exit.exit_value_check_est_us,:exit_value_check_est_uk => dea.deal_exits.first.exit.exit_value_check_est_uk, :exit_value_check_est_yen => dea.deal_exits.first.exit.exit_value_check_est_yen,:exit_value_check_est_euro => dea.deal_exits.first.exit.exit_value_check_est_euro , :ebit_uk => dea.ebit_uk_export, :ebit_uk_conf => dea.ebit_uk_conf_export, :ebit_us => dea.ebit_us_export, :ebit_us_conf => dea.ebit_us_conf_export, :ebit_yen => dea.ebit_yen_export, :ebit_yen_conf => dea.ebit_yen_conf_export, :ebit_euro => dea.ebit_euro_export, :ebit_euro_conf => dea.ebit_euro_conf_export, :ebitda_uk => dea.ebitda_uk_export, :ebitda_uk_conf => dea.ebitda_uk_conf_export, :ebitda_us => dea.ebitda_us_export, :ebitda_us_conf => dea.ebitda_us_conf_export, :ebitda_yen => dea.ebitda_yen_export, :ebitda_yen_conf => dea.ebitda_yen_conf_export, :ebitda_euro => dea.ebitda_euro_export, :ebitda_euro_conf => dea.ebitda_euro_conf_export, :turnover_uk => dea.turnover_uk_export, :turnover_uk_conf => dea.turnover_uk_conf_export, :turnover_us => dea.turnover_us_export, :turnover_us_conf => dea.turnover_us_conf_export, :turnover_yen => dea.turnover_yen_export, :turnover_yen_conf => dea.turnover_yen_conf_export, :turnover_euro => dea.turnover_euro_export, :turnover_euro_conf => dea.turnover_euro_conf_export )
                  end
                end
            end
        rescue Exception => e
          puts  "Error : Unable to save data for because #{e.message}"
          puts  "Error : Unable to save data for #{igw.id}"
        end
      end
    end
    logger.info "------InvestorGroupExecutiveWsw Export end#{Time.zone.now}----------------"
  end

  def self.advisor_updated
    logger = Logger.new("#{Rails.root}/log/export_log_check.log")
    logger.info "------AdvisorGroup Export update Start#{Time.zone.now}----------------"
    AdvisorGroup.by_site_status.where("updated_at > ?", Date.today).order(:id).each do |aa|
      begin
        aa.all_deals_status_applied.order(:id).each do |dd|
          ati = aa.deal_advisors.where(deal_id:dd.id).collect(&:advice_type_id).uniq
          advice_types = '$'+ati.join('$')+'$'
          atit = aa.deal_advisors.where(deal_id:dd.id).collect(&:advice_to_id).uniq
          advice_tos = '$'+atit.join('$')+'$'
          AdvisorExportData.where("advisor_group_id = ? AND deal_id = ?", aa.id, dd.id).delete_all
          AdvisorExportData.create(advisor_group_id:aa.id,name:aa.name, no_of_deals:"0", total_value:"0", total_average:"0",  get_advisor_type:aa.get_advisor_type_export, advice_to:dd.deal_advisors.where(:advisor_group_component_id => aa.advisor_group_components.collect(&:id)).try(:first).try(:advice_to).try(:name), company_name:dd.company_name, deal_announced_date:dd.deal_announced_format_export,country_name:dd.country_name,city_name:dd.city_name_export,industry_name:dd.industry_name,super_sector_name:dd.super_sector_name,deal_value:dd.deal_value,value_confidential:dd.value_confidential,value_estimate:dd.value_estimate,deal_type_name:dd.deal_type_name,advanced_deal_type:dd.advanced_deal_type,sector_name:aa.sector_name,basic_sector_name:dd.basic_sector_name,company_information_text:dd.company_information_text_export,vendor_type_name:dd.vendor_type_name_export,deal_vendor_name:dd.deal_vendor_name_export,equity_syndicate:dd.equity_syndicate_export,equity_all:dd.equity_all_export,equity_lead:dd.equity_lead_export,mezzanine_syndicate:dd.mezzanine_syndicate_export,debt_syndicate:dd.debt_syndicate_export,custom_currency_value_of_equity:dd.custom_currency_value_of_equity_export,custom_total_mezzanine_amount:dd.custom_total_mezzanine_amount_export,funding_round:dd.funding_round_export,introduced_to_investor:dd.introduced_to_investor_export,majority_minority_stake:dd.majority_minority_stake_export,legal_advisers:dd.legal_advisers_export,corporate_finance_advisers:dd.corporate_finance_advisers_export,commercial_due_diligence_advisers:dd.commercial_due_diligence_advisers_export,environmental_due_diligence_advisers:dd.environmental_due_diligence_advisers_export,financial_due_diligence_advisers:dd.financial_due_diligence_advisers_export,insurance_due_diligence_advisers:dd.insurance_due_diligence_advisers_export,other_due_diligence_advisers:dd.other_due_diligence_advisers_export,accounting_advisers:dd.accounting_advisers_export,actuarial_advisor:dd.actuarial_advisor_export,sponsor_broker_advisor:dd.sponsor_broker_advisor_export,tax_advisers:dd.tax_advisers_export,other_advisers:dd.other_advisers_export,company_founded:dd.company_founded_export,region_name:dd.region_name,staff_count:dd.staff_count_export,ebit:dd.ebit_export,ebit_year:dd.ebit_year_export,ebit_forecast_str:dd.ebit_forecast_str,ebit_confidential_str:dd.ebit_confidential_str,ebitda:dd.ebitda_export,ebitda_year:dd.ebitda_year_export,ebitda_forecast_str:dd.ebitda_forecast_str,ebitda_confidential_str:dd.ebitda_confidential_str,turnover:dd.turnover,turnover_year:dd.turnover_year_export,turnover_forecast_str:dd.turnover_forecast_str,turnover_confidential_str:dd.turnover_confidential_str,exit_value:dd.exit_value_export,exit_route_name:dd.exit_route_name_export,exit_status:dd.exit_status_export,exit_date:dd.exit_date_format_export,exit_market:dd.exit_market_export,exit_acquirer:dd.exit_acquirer_export ,exit_investors_true:dd.exit_investors_true_export, exit_investors_false:dd.exit_investors_false_export, :deal_id => dd.id,advice_type_id:advice_types ,advice_to_id:advice_tos,deal_type_id:dd.deal_type,deal_country_id:dd.country_id,sector:dd.sub_sector_id,deal_date:dd.deal_announced, deal_value_uk_f:dd.deal_value_uk_f, deal_value_us_f:dd.deal_value_us_f, deal_value_euro_f:dd.deal_value_euro_f, deal_value_yen_f:dd.deal_value_yen_f, article_text:dd.article_text, deal_type_confidential:dd.deal_type_confidential, deal_value_uk_est:dd.deal_value_uk_est, deal_value_us_est:dd.deal_value_us_est, deal_value_euro_est:dd.deal_value_euro_est, deal_value_yen_est:dd.deal_value_yen_est, exit_id:dd.exit_id_exp, exit_value_yen_f:dd.exit_value_yen, exit_value_euro_f:dd.exit_value_euro, exit_value_uk_f:dd.exit_value_uk, exit_value_us_f:dd.exit_value_us,deal_value_uk_export:dd.deal_value_uk_export, deal_value_us_export:dd.deal_value_us_export, deal_value_euro_export:dd.deal_value_euro_export, deal_value_yen_export:dd.deal_value_yen_export, :exit_value_check_est_us => dd.exit_value_check_est_us,:exit_value_check_est_uk => dd.exit_value_check_est_uk, :exit_value_check_est_yen => dd.exit_value_check_est_yen,:exit_value_check_est_euro => dd.exit_value_check_est_euro , :ebit_uk => dd.ebit_uk_export, :ebit_uk_conf => dd.ebit_uk_conf_export, :ebit_us => dd.ebit_us_export, :ebit_us_conf => dd.ebit_us_conf_export, :ebit_yen => dd.ebit_yen_export, :ebit_yen_conf => dd.ebit_yen_conf_export, :ebit_euro => dd.ebit_euro_export, :ebit_euro_conf => dd.ebit_euro_conf_export, :ebitda_uk => dd.ebitda_uk_export, :ebitda_uk_conf => dd.ebitda_uk_conf_export, :ebitda_us => dd.ebitda_us_export, :ebitda_us_conf => dd.ebitda_us_conf_export, :ebitda_yen => dd.ebitda_yen_export, :ebitda_yen_conf => dd.ebitda_yen_conf_export, :ebitda_euro => dd.ebitda_euro_export, :ebitda_euro_conf => dd.ebitda_euro_conf_export, :turnover_uk => dd.turnover_uk_export, :turnover_uk_conf => dd.turnover_uk_conf_export, :turnover_us => dd.turnover_us_export, :turnover_us_conf => dd.turnover_us_conf_export, :turnover_yen => dd.turnover_yen_export, :turnover_yen_conf => dd.turnover_yen_conf_export, :turnover_euro => dd.turnover_euro_export, :turnover_euro_conf => dd.turnover_euro_conf_export, :email => aa.advisor_email  )
        end
      rescue Exception => e
        puts  "Error : Unable to save data for because #{e.message}"
        puts  "Error : Unable to save data for #{aa.id}"
      end
    end

    Deal.by_site_status.where("updated_at > ?", Date.today).order(:id).each do |dd|
      adv_id = dd.advisors.pluck("advisor_groups.id").uniq
      AdvisorGroup.by_site_status.where(id:adv_id).order(:id).each do |aa|
        ati = aa.deal_advisors.where(deal_id:dd.id).collect(&:advice_type_id).uniq
        advice_types = '$'+ati.join('$')+'$'
        atit = aa.deal_advisors.where(deal_id:dd.id).collect(&:advice_to_id).uniq
        advice_tos = '$'+atit.join('$')+'$'
        AdvisorExportData.where("advisor_group_id = ? AND deal_id = ?", aa.id, dd.id).delete_all
        AdvisorExportData.create(advisor_group_id:aa.id,name:aa.name, no_of_deals:"0", total_value:"0", total_average:"0",  get_advisor_type:aa.get_advisor_type_export, advice_to:dd.deal_advisors.where(:advisor_group_component_id => aa.advisor_group_components.collect(&:id)).try(:first).try(:advice_to).try(:name), company_name:dd.company_name, deal_announced_date:dd.deal_announced_format_export,country_name:dd.country_name,city_name:dd.city_name_export,industry_name:dd.industry_name,super_sector_name:dd.super_sector_name,deal_value:dd.deal_value,value_confidential:dd.value_confidential,value_estimate:dd.value_estimate,deal_type_name:dd.deal_type_name,advanced_deal_type:dd.advanced_deal_type,sector_name:aa.sector_name,basic_sector_name:dd.basic_sector_name,company_information_text:dd.company_information_text_export,vendor_type_name:dd.vendor_type_name_export,deal_vendor_name:dd.deal_vendor_name_export,equity_syndicate:dd.equity_syndicate_export,equity_all:dd.equity_all_export,equity_lead:dd.equity_lead_export,mezzanine_syndicate:dd.mezzanine_syndicate_export,debt_syndicate:dd.debt_syndicate_export,custom_currency_value_of_equity:dd.custom_currency_value_of_equity_export,custom_total_mezzanine_amount:dd.custom_total_mezzanine_amount_export,funding_round:dd.funding_round_export,introduced_to_investor:dd.introduced_to_investor_export,majority_minority_stake:dd.majority_minority_stake_export,legal_advisers:dd.legal_advisers_export,corporate_finance_advisers:dd.corporate_finance_advisers_export,commercial_due_diligence_advisers:dd.commercial_due_diligence_advisers_export,environmental_due_diligence_advisers:dd.environmental_due_diligence_advisers_export,financial_due_diligence_advisers:dd.financial_due_diligence_advisers_export,insurance_due_diligence_advisers:dd.insurance_due_diligence_advisers_export,other_due_diligence_advisers:dd.other_due_diligence_advisers_export,accounting_advisers:dd.accounting_advisers_export,actuarial_advisor:dd.actuarial_advisor_export,sponsor_broker_advisor:dd.sponsor_broker_advisor_export,tax_advisers:dd.tax_advisers_export,other_advisers:dd.other_advisers_export,company_founded:dd.company_founded_export,region_name:dd.region_name,staff_count:dd.staff_count_export,ebit:dd.ebit_export,ebit_year:dd.ebit_year_export,ebit_forecast_str:dd.ebit_forecast_str,ebit_confidential_str:dd.ebit_confidential_str,ebitda:dd.ebitda_export,ebitda_year:dd.ebitda_year_export,ebitda_forecast_str:dd.ebitda_forecast_str,ebitda_confidential_str:dd.ebitda_confidential_str,turnover:dd.turnover,turnover_year:dd.turnover_year_export,turnover_forecast_str:dd.turnover_forecast_str,turnover_confidential_str:dd.turnover_confidential_str,exit_value:dd.exit_value_export,exit_route_name:dd.exit_route_name_export,exit_status:dd.exit_status_export,exit_date:dd.exit_date_format_export,exit_market:dd.exit_market_export,exit_acquirer:dd.exit_acquirer_export ,exit_investors_true:dd.exit_investors_true_export, exit_investors_false:dd.exit_investors_false_export, :deal_id => dd.id, advice_type_id:advice_types ,advice_to_id:advice_tos,deal_type_id:dd.deal_type,deal_country_id:dd.country_id,sector:dd.sub_sector_id,deal_date:dd.deal_announced, deal_value_uk_f:dd.deal_value_uk_f, deal_value_us_f:dd.deal_value_us_f, deal_value_euro_f:dd.deal_value_euro_f, deal_value_yen_f:dd.deal_value_yen_f, article_text:dd.article_text, deal_type_confidential:dd.deal_type_confidential, deal_value_uk_est:dd.deal_value_uk_est, deal_value_us_est:dd.deal_value_us_est, deal_value_euro_est:dd.deal_value_euro_est, deal_value_yen_est:dd.deal_value_yen_est, exit_id:dd.exit_id_exp, exit_value_yen_f:dd.exit_value_yen, exit_value_euro_f:dd.exit_value_euro, exit_value_uk_f:dd.exit_value_uk, exit_value_us_f:dd.exit_value_us,deal_value_uk_export:dd.deal_value_uk_export, deal_value_us_export:dd.deal_value_us_export, deal_value_euro_export:dd.deal_value_euro_export, deal_value_yen_export:dd.deal_value_yen_export, :exit_value_check_est_us => dd.exit_value_check_est_us,:exit_value_check_est_uk => dd.exit_value_check_est_uk, :exit_value_check_est_yen => dd.exit_value_check_est_yen,:exit_value_check_est_euro => dd.exit_value_check_est_euro , :ebit_uk => dd.ebit_uk_export, :ebit_uk_conf => dd.ebit_uk_conf_export, :ebit_us => dd.ebit_us_export, :ebit_us_conf => dd.ebit_us_conf_export, :ebit_yen => dd.ebit_yen_export, :ebit_yen_conf => dd.ebit_yen_conf_export, :ebit_euro => dd.ebit_euro_export, :ebit_euro_conf => dd.ebit_euro_conf_export, :ebitda_uk => dd.ebitda_uk_export, :ebitda_uk_conf => dd.ebitda_uk_conf_export, :ebitda_us => dd.ebitda_us_export, :ebitda_us_conf => dd.ebitda_us_conf_export, :ebitda_yen => dd.ebitda_yen_export, :ebitda_yen_conf => dd.ebitda_yen_conf_export, :ebitda_euro => dd.ebitda_euro_export, :ebitda_euro_conf => dd.ebitda_euro_conf_export, :turnover_uk => dd.turnover_uk_export, :turnover_uk_conf => dd.turnover_uk_conf_export, :turnover_us => dd.turnover_us_export, :turnover_us_conf => dd.turnover_us_conf_export, :turnover_yen => dd.turnover_yen_export, :turnover_yen_conf => dd.turnover_yen_conf_export, :turnover_euro => dd.turnover_euro_export, :turnover_euro_conf => dd.turnover_euro_conf_export, :email => aa.advisor_email)
      end
    end
    logger.info "------AdvisorGroup update Export End#{Time.zone.now}----------------"
  end

  def self.investor_updated
    logger = Logger.new("#{Rails.root}/log/export_log_check.log")
    logger.info "------InvestorGroup update Export Start#{Time.zone.now}----------------"
    InvestorGroup.by_site_status.where("updated_at > ?", Date.today).order(:id).each do |aa|
      begin
        aa.all_deals_status_applied.order(:id).each do |dd|
          ft = aa.deal_investments.where(deal_id:dd.id).pluck("investment_type_id").uniq
          invest_type = aa.deal_investments.where(deal_id:dd.id).collect{|t| t.try(:investment_type).try(:name)}.compact.uniq.sort.join(", ")

          executive_names = "n/d"
          executive_names = ActiveRecord::Base.connection.execute("select ige.full_name from investor_group_components as igc inner join deal_investments as di on di.deal_id = #{dd.id} and di.investor_group_component_id = igc.id and igc.investor_group_id = #{aa.id} inner join deal_investment_executives as die on die.deal_investment_id = di.id inner join investor_group_executives as ige on ige.id = die.investor_group_executive_id").map{|y| y["full_name"] }.compact.uniq.sort.join(", ").gsub("'","''")
          executive_names = "n/d" if executive_names.blank?

          funding_type = '$' + ft.uniq.join("$") + '$'
          InvestorExportData.where("investor_group_id = ? AND deal_id = ?", aa.id, dd.id).delete_all
          InvestorExportData.create(investor_group_id: aa.id, investor_name: aa.group_name, investor_type_name: aa.investor_type_name, investment_type_name: invest_type.blank? ? "n/d" : invest_type,equity_debt_executives: executive_names , region_name: dd.region_name, city_name: dd.city_name_export, country_name: dd.country_name, geo_focus: dd.geo_focus_export, industry_name: dd.industry_name, super_sector_name: dd.super_sector_name, company_name: dd.company_name, deal_announced_date: dd.deal_announced_format_export, deal_value: dd.deal_value_export, value_confidential: dd.value_confidential, value_estimate: dd.value_estimate, deal_type_name: dd.deal_type_name, advanced_deal_type: dd.advanced_deal_type, sector_name: dd.sector_name, basic_sector_name: dd.basic_sector_name, company_information_text: dd.company_information_text_export, deal_vendor_name: dd.deal_vendor_name_export, vendor_type_name: dd.vendor_type_name_export, equity_syndicate: dd.equity_syndicate_export, equity_all: dd.equity_all_export, equity_lead: dd.equity_lead_export, mezzanine_syndicate: dd.mezzanine_syndicate_export, debt_syndicate: dd.debt_syndicate_export, custom_currency_value_of_equity: dd.custom_currency_value_of_equity_export, custom_total_mezzanine_amount: dd.custom_total_mezzanine_amount_export, total_debt_amount: dd.total_debt_amount_export, funding_round: dd.funding_round_export, company_founded: dd.company_founded_export, introduced_to_investor: dd.introduced_to_investor_export, majority_minority_stake: dd.majority_minority_stake_export, legal_advisers: dd.legal_advisers_export, corporate_finance_advisers: dd.corporate_finance_advisers_export, commercial_due_diligence_advisers: dd.commercial_due_diligence_advisers_export, environmental_due_diligence_advisers: dd.environmental_due_diligence_advisers_export, financial_due_diligence_advisers: dd.financial_due_diligence_advisers_export, insurance_due_diligence_advisers: dd.insurance_due_diligence_advisers_export, other_due_diligence_advisers: dd.other_due_diligence_advisers_export, accounting_advisers: dd.accounting_advisers_export, actuarial_advisor: dd.actuarial_advisor_export, sponsor_broker_advisor: dd.sponsor_broker_advisor_export, tax_advisers: dd.tax_advisers_export, other_advisers: dd.other_advisers_export, staff_count: dd.staff_count_export, ebit_export: dd.ebit_export, ebit_year: dd.ebit_year_export, ebit_forecast_str: dd.ebit_forecast_str, ebit_confidential_str: dd.ebit_confidential_str, ebitda: dd.ebitda_export, ebitda_year: dd.ebitda_year_export, ebitda_forecast_str: dd.ebitda_forecast_str, ebitda_confidential_str: dd.ebitda_confidential_str, turnover_export: dd.turnover_export, turnover_year: dd.turnover_year_export, turnover_forecast_str: dd.turnover_forecast_str, turnover_confidential_str: dd.turnover_confidential_str, exit_value: dd.exit_value_export, exit_route_name: dd.exit_route_name_export, exit_status: dd.exit_status_export, exit_date: dd.exit_date_format_export, exit_market_export: dd.exit_market_export, exit_acquirer: dd.exit_acquirer_export, exit_investors_true: dd.exit_investors_true_export, exit_investors_false: dd.exit_investors_false_export, :deal_id => dd.id, funding_type_id:funding_type, deal_type_id:dd.deal_type,deal_country_id:dd.country_id,sector:dd.sub_sector_id,deal_date:dd.deal_announced, deal_value_uk_f:dd.deal_value_uk_f, deal_value_us_f:dd.deal_value_us_f, deal_value_euro_f:dd.deal_value_euro_f, deal_value_yen_f:dd.deal_value_yen_f, article_text:dd.article_text, deal_type_confidential:dd.deal_type_confidential, deal_value_uk_est:dd.deal_value_uk_est, deal_value_us_est:dd.deal_value_us_est, deal_value_euro_est:dd.deal_value_euro_est, deal_value_yen_est:dd.deal_value_yen_est, exit_id:dd.exit_id_exp, exit_value_yen_f:dd.exit_value_yen, exit_value_euro_f:dd.exit_value_euro, exit_value_uk_f:dd.exit_value_uk, exit_value_us_f:dd.exit_value_us,deal_value_uk_export:dd.deal_value_uk_export, deal_value_us_export:dd.deal_value_us_export, deal_value_euro_export:dd.deal_value_euro_export, deal_value_yen_export:dd.deal_value_yen_export, :exit_value_check_est_us => dd.exit_value_check_est_us,:exit_value_check_est_uk => dd.exit_value_check_est_uk, :exit_value_check_est_yen => dd.exit_value_check_est_yen,:exit_value_check_est_euro => dd.exit_value_check_est_euro,:investor_status_name => aa.status_name, :total_debt_amount_us => dd.total_debt_amount_us_export, :total_debt_amount_uk => dd.total_debt_amount_uk_export, :total_debt_amount_yen => dd.total_debt_amount_yen_export, :total_debt_amount_euro => dd.total_debt_amount_euro_export,:deal_status_name => dd.status_name,:email => aa.investor_email , :ebit_uk => dd.ebit_uk_export, :ebit_uk_conf => dd.ebit_uk_conf_export, :ebit_us => dd.ebit_us_export, :ebit_us_conf => dd.ebit_us_conf_export, :ebit_yen => dd.ebit_yen_export, :ebit_yen_conf => dd.ebit_yen_conf_export, :ebit_euro => dd.ebit_euro_export, :ebit_euro_conf => dd.ebit_euro_conf_export, :ebitda_uk => dd.ebitda_uk_export, :ebitda_uk_conf => dd.ebitda_uk_conf_export, :ebitda_us => dd.ebitda_us_export, :ebitda_us_conf => dd.ebitda_us_conf_export, :ebitda_yen => dd.ebitda_yen_export, :ebitda_yen_conf => dd.ebitda_yen_conf_export, :ebitda_euro => dd.ebitda_euro_export, :ebitda_euro_conf => dd.ebitda_euro_conf_export, :turnover_uk => dd.turnover_uk_export, :turnover_uk_conf => dd.turnover_uk_conf_export, :turnover_us => dd.turnover_us_export, :turnover_us_conf => dd.turnover_us_conf_export, :turnover_yen => dd.turnover_yen_export, :turnover_yen_conf => dd.turnover_yen_conf_export, :turnover_euro => dd.turnover_euro_export, :turnover_euro_conf => dd.turnover_euro_conf_export )
        end
      rescue Exception => e
        puts  "Error : Unable to save data for because #{e.message}"
        puts  "Error : Unable to save data for #{aa.id}"
      end
    end

    Deal.by_site_status.where("updated_at > ?", Date.today).order(:id).each do |dd|
      inv_id = dd.investors.pluck("investor_groups.id").uniq
      InvestorGroup.by_site_status.where(id:inv_id).order(:id).each do |aa|
        ft = aa.deal_investments.where(deal_id:dd.id).pluck("investment_type_id").uniq
        invest_type = aa.deal_investments.where(deal_id:dd.id).collect{|t| t.try(:investment_type).try(:name)}.compact.uniq.sort.join(", ")

        executive_names = "n/d"
        executive_names = ActiveRecord::Base.connection.execute("select ige.full_name from investor_group_components as igc inner join deal_investments as di on di.deal_id = #{dd.id} and di.investor_group_component_id = igc.id and igc.investor_group_id = #{aa.id} inner join deal_investment_executives as die on die.deal_investment_id = di.id inner join investor_group_executives as ige on ige.id = die.investor_group_executive_id").map{|y| y["full_name"] }.compact.uniq.sort.join(", ").gsub("'","''")
        executive_names = "n/d" if executive_names.blank?

        funding_type = '$' + ft.uniq.join("$") + '$'
        InvestorExportData.where("investor_group_id = ? AND deal_id = ?", aa.id, dd.id).delete_all
        InvestorExportData.create(investor_group_id: aa.id, investor_name: aa.group_name, investor_type_name: aa.investor_type_name, investment_type_name: invest_type.blank? ? "n/d" : invest_type,equity_debt_executives: executive_names, region_name: dd.region_name, city_name: dd.city_name_export, country_name: dd.country_name, geo_focus: dd.geo_focus_export, industry_name: dd.industry_name, super_sector_name: dd.super_sector_name, company_name: dd.company_name, deal_announced_date: dd.deal_announced_format_export, deal_value: dd.deal_value_export, value_confidential: dd.value_confidential, value_estimate: dd.value_estimate, deal_type_name: dd.deal_type_name, advanced_deal_type: dd.advanced_deal_type, sector_name: dd.sector_name, basic_sector_name: dd.basic_sector_name, company_information_text: dd.company_information_text_export, deal_vendor_name: dd.deal_vendor_name_export, vendor_type_name: dd.vendor_type_name_export, equity_syndicate: dd.equity_syndicate_export, equity_all: dd.equity_all_export, equity_lead: dd.equity_lead_export, mezzanine_syndicate: dd.mezzanine_syndicate_export, debt_syndicate: dd.debt_syndicate_export, custom_currency_value_of_equity: dd.custom_currency_value_of_equity_export, custom_total_mezzanine_amount: dd.custom_total_mezzanine_amount_export, total_debt_amount: dd.total_debt_amount_export, funding_round: dd.funding_round_export, company_founded: dd.company_founded_export, introduced_to_investor: dd.introduced_to_investor_export, majority_minority_stake: dd.majority_minority_stake_export, legal_advisers: dd.legal_advisers_export, corporate_finance_advisers: dd.corporate_finance_advisers_export, commercial_due_diligence_advisers: dd.commercial_due_diligence_advisers_export, environmental_due_diligence_advisers: dd.environmental_due_diligence_advisers_export, financial_due_diligence_advisers: dd.financial_due_diligence_advisers_export, insurance_due_diligence_advisers: dd.insurance_due_diligence_advisers_export, other_due_diligence_advisers: dd.other_due_diligence_advisers_export, accounting_advisers: dd.accounting_advisers_export, actuarial_advisor: dd.actuarial_advisor_export, sponsor_broker_advisor: dd.sponsor_broker_advisor_export, tax_advisers: dd.tax_advisers_export, other_advisers: dd.other_advisers_export, staff_count: dd.staff_count_export, ebit_export: dd.ebit_export, ebit_year: dd.ebit_year_export, ebit_forecast_str: dd.ebit_forecast_str, ebit_confidential_str: dd.ebit_confidential_str, ebitda: dd.ebitda_export, ebitda_year: dd.ebitda_year_export, ebitda_forecast_str: dd.ebitda_forecast_str, ebitda_confidential_str: dd.ebitda_confidential_str, turnover_export: dd.turnover_export, turnover_year: dd.turnover_year_export, turnover_forecast_str: dd.turnover_forecast_str, turnover_confidential_str: dd.turnover_confidential_str, exit_value: dd.exit_value_export, exit_route_name: dd.exit_route_name_export, exit_status: dd.exit_status_export, exit_date: dd.exit_date_format_export, exit_market_export: dd.exit_market_export, exit_acquirer: dd.exit_acquirer_export, exit_investors_true: dd.exit_investors_true_export, exit_investors_false: dd.exit_investors_false_export, :deal_id => dd.id, funding_type_id:funding_type, deal_type_id:dd.deal_type,deal_country_id:dd.country_id,sector:dd.sub_sector_id,deal_date:dd.deal_announced, deal_value_uk_f:dd.deal_value_uk_f, deal_value_us_f:dd.deal_value_us_f, deal_value_euro_f:dd.deal_value_euro_f, deal_value_yen_f:dd.deal_value_yen_f, article_text:dd.article_text, deal_type_confidential:dd.deal_type_confidential, deal_value_uk_est:dd.deal_value_uk_est, deal_value_us_est:dd.deal_value_us_est, deal_value_euro_est:dd.deal_value_euro_est, deal_value_yen_est:dd.deal_value_yen_est, exit_id:dd.exit_id_exp, exit_value_yen_f:dd.exit_value_yen, exit_value_euro_f:dd.exit_value_euro, exit_value_uk_f:dd.exit_value_uk, exit_value_us_f:dd.exit_value_us,deal_value_uk_export:dd.deal_value_uk_export, deal_value_us_export:dd.deal_value_us_export, deal_value_euro_export:dd.deal_value_euro_export, deal_value_yen_export:dd.deal_value_yen_export, :exit_value_check_est_us => dd.exit_value_check_est_us,:exit_value_check_est_uk => dd.exit_value_check_est_uk, :exit_value_check_est_yen => dd.exit_value_check_est_yen,:exit_value_check_est_euro => dd.exit_value_check_est_euro,:investor_status_name => aa.status_name, :total_debt_amount_us => dd.total_debt_amount_us_export, :total_debt_amount_uk => dd.total_debt_amount_uk_export, :total_debt_amount_yen => dd.total_debt_amount_yen_export, :total_debt_amount_euro => dd.total_debt_amount_euro_export,:deal_status_name => dd.status_name,:email => aa.investor_email , :ebit_uk => dd.ebit_uk_export, :ebit_uk_conf => dd.ebit_uk_conf_export, :ebit_us => dd.ebit_us_export, :ebit_us_conf => dd.ebit_us_conf_export, :ebit_yen => dd.ebit_yen_export, :ebit_yen_conf => dd.ebit_yen_conf_export, :ebit_euro => dd.ebit_euro_export, :ebit_euro_conf => dd.ebit_euro_conf_export, :ebitda_uk => dd.ebitda_uk_export, :ebitda_uk_conf => dd.ebitda_uk_conf_export, :ebitda_us => dd.ebitda_us_export, :ebitda_us_conf => dd.ebitda_us_conf_export, :ebitda_yen => dd.ebitda_yen_export, :ebitda_yen_conf => dd.ebitda_yen_conf_export, :ebitda_euro => dd.ebitda_euro_export, :ebitda_euro_conf => dd.ebitda_euro_conf_export, :turnover_uk => dd.turnover_uk_export, :turnover_uk_conf => dd.turnover_uk_conf_export, :turnover_us => dd.turnover_us_export, :turnover_us_conf => dd.turnover_us_conf_export, :turnover_yen => dd.turnover_yen_export, :turnover_yen_conf => dd.turnover_yen_conf_export, :turnover_euro => dd.turnover_euro_export, :turnover_euro_conf => dd.turnover_euro_conf_export )
      end
    end
    logger.info "------InvestorGroup update Export end#{Time.zone.now}----------------"
  end

  def self.advisor_export
    logger = Logger.new("#{Rails.root}/log/export_log_check.log")
    logger.info "------AdvisorGroup Export Start#{Time.zone.now}----------------"
     #AdvisorGroup.transaction do
     #AdvisorExportData.delete_all
     AdvisorGroup.by_site_status.find_each(batch_size:100) do |aa|
     begin
       aa.all_deals_status_applied.each do |dd|
       ati = aa.deal_advisors.where(deal_id:dd.id).collect(&:advice_type_id).uniq
       advice_types = '$'+ati.join('$')+'$'
       atit = aa.deal_advisors.where(deal_id:dd.id).collect(&:advice_to_id).uniq
       advice_tos = '$'+atit.join('$')+'$'
       AdvisorExportData.create(advisor_group_id:aa.id,name:aa.name, no_of_deals:"0", total_value:"0", total_average:"0", get_advisor_type:aa.get_advisor_type_export, advice_to:dd.deal_advisors.where(:advisor_group_component_id => aa.advisor_group_components.collect(&:id)).try(:first).try(:advice_to).try(:name), company_name:dd.company_name, deal_announced_date:dd.deal_announced_format_export,country_name:dd.country_name,city_name:dd.city_name_export,industry_name:dd.industry_name,super_sector_name:dd.super_sector_name,deal_value:dd.deal_value,value_confidential:dd.value_confidential,value_estimate:dd.value_estimate,deal_type_name:dd.deal_type_name,advanced_deal_type:dd.advanced_deal_type,sector_name:aa.sector_name,basic_sector_name:dd.basic_sector_name,company_information_text:dd.company_information_text_export,vendor_type_name:dd.vendor_type_name_export,deal_vendor_name:dd.deal_vendor_name_export,equity_syndicate:dd.equity_syndicate_export,equity_all:dd.equity_all_export,equity_lead:dd.equity_lead_export,mezzanine_syndicate:dd.mezzanine_syndicate_export,debt_syndicate:dd.debt_syndicate_export,custom_currency_value_of_equity:dd.custom_currency_value_of_equity_export,custom_total_mezzanine_amount:dd.custom_total_mezzanine_amount_export,funding_round:dd.funding_round_export,introduced_to_investor:dd.introduced_to_investor_export,majority_minority_stake:dd.majority_minority_stake_export,legal_advisers:dd.legal_advisers_export,corporate_finance_advisers:dd.corporate_finance_advisers_export,commercial_due_diligence_advisers:dd.commercial_due_diligence_advisers_export,environmental_due_diligence_advisers:dd.environmental_due_diligence_advisers_export,financial_due_diligence_advisers:dd.financial_due_diligence_advisers_export,insurance_due_diligence_advisers:dd.insurance_due_diligence_advisers_export,other_due_diligence_advisers:dd.other_due_diligence_advisers_export,accounting_advisers:dd.accounting_advisers_export,actuarial_advisor:dd.actuarial_advisor_export,sponsor_broker_advisor:dd.sponsor_broker_advisor_export,tax_advisers:dd.tax_advisers_export,other_advisers:dd.other_advisers_export,company_founded:dd.company_founded_export,region_name:dd.region_name,staff_count:dd.staff_count_export,ebit:dd.ebit_export,ebit_year:dd.ebit_year_export,ebit_forecast_str:dd.ebit_forecast_str,ebit_confidential_str:dd.ebit_confidential_str,ebitda:dd.ebitda_export,ebitda_year:dd.ebitda_year_export,ebitda_forecast_str:dd.ebitda_forecast_str,ebitda_confidential_str:dd.ebitda_confidential_str,turnover:dd.turnover,turnover_year:dd.turnover_year_export,turnover_forecast_str:dd.turnover_forecast_str,turnover_confidential_str:dd.turnover_confidential_str,exit_value:dd.exit_value_export,exit_route_name:dd.exit_route_name_export,exit_status:dd.exit_status_export,exit_date:dd.exit_date_format_export,exit_market:dd.exit_market_export,exit_acquirer:dd.exit_acquirer_export ,exit_investors_true:dd.exit_investors_true_export, exit_investors_false:dd.exit_investors_false_export, :deal_id => dd.id,  advice_type_id:advice_types ,advice_to_id:advice_tos,deal_type_id:dd.deal_type,deal_country_id:dd.country_id,sector:dd.sub_sector_id,deal_date:dd.deal_announced, deal_value_uk_f:dd.deal_value_uk_f, deal_value_us_f:dd.deal_value_us_f, deal_value_euro_f:dd.deal_value_euro_f, deal_value_yen_f:dd.deal_value_yen_f, article_text:dd.article_text, deal_type_confidential:dd.deal_type_confidential, deal_value_uk_est:dd.deal_value_uk_est, deal_value_us_est:dd.deal_value_us_est, deal_value_euro_est:dd.deal_value_euro_est, deal_value_yen_est:dd.deal_value_yen_est, exit_id:dd.exit_id_exp, exit_value_yen_f:dd.exit_value_yen, exit_value_euro_f:dd.exit_value_euro, exit_value_uk_f:dd.exit_value_uk, exit_value_us_f:dd.exit_value_us,deal_value_uk_export:dd.deal_value_uk_export, deal_value_us_export:dd.deal_value_us_export, deal_value_euro_export:dd.deal_value_euro_export, deal_value_yen_export:dd.deal_value_yen_export, :exit_value_check_est_us => dd.exit_value_check_est_us,:exit_value_check_est_uk => dd.exit_value_check_est_uk, :exit_value_check_est_yen => dd.exit_value_check_est_yen,:exit_value_check_est_euro => dd.exit_value_check_est_euro , :ebit_uk => dd.ebit_uk_export, :ebit_uk_conf => dd.ebit_uk_conf_export, :ebit_us => dd.ebit_us_export, :ebit_us_conf => dd.ebit_us_conf_export, :ebit_yen => dd.ebit_yen_export, :ebit_yen_conf => dd.ebit_yen_conf_export, :ebit_euro => dd.ebit_euro_export, :ebit_euro_conf => dd.ebit_euro_conf_export, :ebitda_uk => dd.ebitda_uk_export, :ebitda_uk_conf => dd.ebitda_uk_conf_export, :ebitda_us => dd.ebitda_us_export, :ebitda_us_conf => dd.ebitda_us_conf_export, :ebitda_yen => dd.ebitda_yen_export, :ebitda_yen_conf => dd.ebitda_yen_conf_export, :ebitda_euro => dd.ebitda_euro_export, :ebitda_euro_conf => dd.ebitda_euro_conf_export, :turnover_uk => dd.turnover_uk_export, :turnover_uk_conf => dd.turnover_uk_conf_export, :turnover_us => dd.turnover_us_export, :turnover_us_conf => dd.turnover_us_conf_export, :turnover_yen => dd.turnover_yen_export, :turnover_yen_conf => dd .turnover_yen_conf_export, :turnover_euro => dd.turnover_euro_export, :turnover_euro_conf => dd .turnover_euro_conf_export, :email => aa.advisor_email )
       end

     rescue Exception => e
         puts "Error : Unable to save data for #{aa.id}"
         puts "Error : Unable to save data because #{e.message}"
         end
   end
 #end
    logger.info "------AdvisorGroup Export End#{Time.zone.now}----------------"
 end

 def self.investor_export
   #InvestorGroup.transaction do
   #InvestorExportData.delete_all
   logger = Logger.new("#{Rails.root}/log/export_log_check.log")
   logger.info "------InvestorGroup Export Start#{Time.zone.now}----------------"
   InvestorGroup.by_site_status.find_each(batch_size:100) do |aa|
   begin
     aa.all_deals_status_applied.each do |dd|
     ft = aa.deal_investments.pluck("investment_type_id").uniq
     funding_type = '$' + ft.uniq.join("$") + '$'
     InvestorExportData.create(investor_group_id: aa.id, investor_name: aa.group_name, investor_type_name: aa.investor_type_name_export, region_name: dd.region_name, city_name: dd.city_name_export, country_name: dd.country_name, geo_focus: dd.geo_focus_export, industry_name: dd.industry_name, super_sector_name: dd.super_sector_name, company_name: dd.company_name, deal_announced_date: dd.deal_announced_format_export, deal_value: dd.deal_value_export, value_confidential: dd.value_confidential, value_estimate: dd.value_estimate, deal_type_name: dd.deal_type_name, advanced_deal_type: dd.advanced_deal_type, sector_name: dd.sector_name, basic_sector_name: dd.basic_sector_name, company_information_text: dd.company_information_text_export, deal_vendor_name: dd.deal_vendor_name_export, vendor_type_name: dd.vendor_type_name_export, equity_syndicate: dd.equity_syndicate_export, equity_all: dd.equity_all_export, equity_lead: dd.equity_lead_export, mezzanine_syndicate: dd.mezzanine_syndicate_export, debt_syndicate: dd.debt_syndicate_export, custom_currency_value_of_equity: dd.custom_currency_value_of_equity_export, custom_total_mezzanine_amount: dd.custom_total_mezzanine_amount_export, total_debt_amount: dd.total_debt_amount_export, funding_round: dd.funding_round_export, company_founded: dd.company_founded_export, introduced_to_investor: dd.introduced_to_investor_export, majority_minority_stake: dd.majority_minority_stake_export, legal_advisers: dd.legal_advisers_export, corporate_finance_advisers: dd.corporate_finance_advisers_export, commercial_due_diligence_advisers: dd.commercial_due_diligence_advisers_export, environmental_due_diligence_advisers: dd.environmental_due_diligence_advisers_export, financial_due_diligence_advisers: dd.financial_due_diligence_advisers_export, insurance_due_diligence_advisers: dd.insurance_due_diligence_advisers_export, other_due_diligence_advisers: dd.other_due_diligence_advisers_export, accounting_advisers: dd.accounting_advisers_export, actuarial_advisor: dd.actuarial_advisor_export, sponsor_broker_advisor: dd.sponsor_broker_advisor_export, tax_advisers: dd.tax_advisers_export, other_advisers: dd.other_advisers_export, staff_count: dd.staff_count_export, ebit_export: dd.ebit_export, ebit_year: dd.ebit_year_export, ebit_forecast_str: dd.ebit_forecast_str, ebit_confidential_str: dd.ebit_confidential_str, ebitda: dd.ebitda_export, ebitda_year: dd.ebitda_year_export, ebitda_forecast_str: dd.ebitda_forecast_str, ebitda_confidential_str: dd.ebitda_confidential_str, turnover_export: dd.turnover_export, turnover_year: dd.turnover_year_export, turnover_forecast_str: dd.turnover_forecast_str, turnover_confidential_str: dd.turnover_confidential_str, exit_value: dd.exit_value_export, exit_route_name: dd.exit_route_name_export, exit_status: dd.exit_status_export, exit_date: dd.exit_date_format_export, exit_market_export: dd.exit_market_export, exit_acquirer: dd.exit_acquirer_export, exit_investors_true: dd.exit_investors_true_export, exit_investors_false: dd.exit_investors_false_export, :deal_id => dd.id, funding_type_id:funding_type, deal_type_id:dd.deal_type,deal_country_id:dd.country_id,sector:dd.sub_sector_id,deal_date:dd.deal_announced, deal_value_uk_f:dd.deal_value_uk_f, deal_value_us_f:dd.deal_value_us_f, deal_value_euro_f:dd.deal_value_euro_f, deal_value_yen_f:dd.deal_value_yen_f, article_text:dd.article_text, deal_type_confidential:dd.deal_type_confidential, deal_value_uk_est:dd.deal_value_uk_est, deal_value_us_est:dd.deal_value_us_est, deal_value_euro_est:dd.deal_value_euro_est, deal_value_yen_est:dd.deal_value_yen_est, exit_id:dd.exit_id_exp, exit_value_yen_f:dd.exit_value_yen, exit_value_euro_f:dd.exit_value_euro, exit_value_uk_f:dd.exit_value_uk, exit_value_us_f:dd.exit_value_us,deal_value_uk_export:dd.deal_value_uk_export, deal_value_us_export:dd.deal_value_us_export, deal_value_euro_export:dd.deal_value_euro_export, deal_value_yen_export:dd.deal_value_yen_export, :exit_value_check_est_us => dd.exit_value_check_est_us,:exit_value_check_est_uk => dd.exit_value_check_est_uk, :exit_value_check_est_yen => dd.exit_value_check_est_yen,:exit_value_check_est_euro => dd.exit_value_check_est_euro,:investor_status_name => aa.status_name, :total_debt_amount_us => dd.total_debt_amount_us_export, :total_debt_amount_uk => dd.total_debt_amount_uk_export, :total_debt_amount_yen => dd.total_debt_amount_yen_export, :total_debt_amount_euro => dd.total_debt_amount_euro_export,:deal_status_name => dd.status_name,:email => aa.investor_email , :ebit_uk => dd.ebit_uk_export, :ebit_uk_conf => dd.ebit_uk_conf_export, :ebit_us => dd.ebit_us_export, :ebit_us_conf => dd.ebit_us_conf_export, :ebit_yen => dd.ebit_yen_export, :ebit_yen_conf => dd.ebit_yen_conf_export, :ebit_euro => dd.ebit_euro_export, :ebit_euro_conf => dd.ebit_euro_conf_export, :ebitda_uk => dd.ebitda_uk_export, :ebitda_uk_conf => dd.ebitda_uk_conf_export, :ebitda_us => dd.ebitda_us_export, :ebitda_us_conf => dd.ebitda_us_conf_export, :ebitda_yen => dd.ebitda_yen_export, :ebitda_yen_conf => dd.ebitda_yen_conf_export, :ebitda_euro => dd.ebitda_euro_export, :ebitda_euro_conf => dd.ebitda_euro_conf_export, :turnover_uk => dd.turnover_uk_export, :turnover_uk_conf => dd.turnover_uk_conf_export, :turnover_us => dd.turnover_us_export, :turnover_us_conf => dd.turnover_us_conf_export, :turnover_yen => dd.turnover_yen_export, :turnover_yen_conf => dd.turnover_yen_conf_export, :turnover_euro => dd.turnover_euro_export, :turnover_euro_conf => dd.turnover_euro_conf_export )
     end
   rescue Exception => e
       puts "Error : Unable to save data for because #{e.message}"
       puts "Error : Unable to save data for #{aa.id}"
       end
 end
 #end
   logger.info "------InvestorGroup Export end#{Time.zone.now}----------------"
end
end

