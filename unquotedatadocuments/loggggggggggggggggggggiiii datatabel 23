<%= javascript_include_tag "jquery.dataTables.min.js"%>

<script type="text/javascript">
    $(document).ready(function() {
        var dataSet= <%= @arr_fund_performances.to_json.html_safe%>;
        console.log(dataSet);
        $('.cls_table_style188').DataTable( {
            data: dataSet,
                  "order": [[0, 'desc']],
            columns: [	
                { title: "FundPerformance Date" },
                { title: "Source" },
                { title: "Commitment" },
                { title: "Gross IRR" },
		{ title: "Net IRR" },
                { title: "TVPI" },
                { title: "Currency" },],
             // "order": [[0, 'desc']],
            "paging":   false,
            "searching": false,
            "info":  false,
            //"scrollY": "125px",
            //"scrollCollapse": true,
            "aoColumns": [ {title:"Fund Performance Date","sType": "stringMonthYear"},{ title:"Source"},{ title:"Commitment"},{title:"Currency"}, {title:"Gross IRR"},{title:"Net IRR"}, {title:"TVPI"} ],
        } );

$.extend(jQuery.fn.dataTableExt.oSort, {
    "stringMonthYear-pre": function (s) {
        var months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
 
        var dateComponents = s.split(" ");
        dateComponents[0] = dateComponents[0].replace(",", "");
        dateComponents[1] = jQuery.trim(dateComponents[1]);
 
        var year = dateComponents[1];
 
        var month = 0;
        for (var i = 0; i < months.length; i++) {
            if (months[i].toLowerCase() == dateComponents[0].toLowerCase().substring(0,3)) {
                month = i;
                break;
            }
        }
 
        return new Date(year, month, 1);
    },
 
    "stringMonthYear-asc": function (a, b) {
        return ((a < b) ? -1 : ((a > b) ? 1 : 0));
    },
 
    "stringMonthYear-desc": function (a, b) {
        return ((a < b) ? 1 : ((a > b) ? -1 : 0));
    },
 /*  "NumericOrBlank-asc": function(x,y) {
                   var retVal;
                    x = (x = parseFloat($.trim(x).replace(/,/g,''))) ? x : 0;
                    y = (y = parseFloat($.trim(y).replace(/,/g,''))) ? y : 0;
                    if (x==y) retVal= 0;
                    else retVal = (x>y) ? 1 : -1;
                    return retVal;
                },
                "NumericOrBlank-desc": function(y,x) {
                    var retVal;
                    x = (x = parseFloat($.trim(x).replace(/,/g,''))) ? x : 0;
                    y = (y = parseFloat($.trim(y).replace(/,/g,''))) ? y : 0;
                    if (x==y) retVal= 0;
                    else retVal = (x>y) ? 1 : -1;
                    return retVal;
                } */
    "NumericOrBlank-pre": function (s){
                    var a = parseFloat($.trim(s));
                    if(a==0){return "0";}else if(a>0){return a;}else{return " "}
                },
                  "NumericOrBlank-asc": function(a,b) {
                      return ((a < b) ? -1 : ((a > b) ? 1 : 0));
                },
                "NumericOrBlank-desc": function(b,a) {
                    return ((a < b) ? 1 : ((a > b) ? -1 : 0));
                } 
});

});
</script>

